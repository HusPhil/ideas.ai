<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_send.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DgAACw4BQL7hQQAABMpJREFUWEftl2tsFFUUx8cXvqKEEp2HW9vqlsq2oBJFQDrTIiiEkkrBFimsgKQB
        lECiIDbWQkyg7XZftYE0fCgh0ZDiIyYSCbG0bKndXZbwaCvBgPpFQrGmu33QmTX1eu50Zrmzna67Zbdg
        0n/yz8zemTnnt3funHsvNaEJTWgMMhjmPMww/Ac0K/zMMMIJluWXQ/M9w1fvAgGYlWEFpDHDnwcXwOU7
        C5qUNPtxAApiKJrhz4G7NaCscBF6dSXceu/wE+OsKVMWTgaIIRmGESqmTp332JMsXzoSlG+nab4QHhl/
        UJoRXApI197vOox2j9he1dzTu2jN3haGy/krDLSD5rKL4LHxA4WeW6MCFO08dMzhlZDqKldAXFpiP80Z
        crtIUBi3nTBGzRT11n1KmMTJaFz8ICS8gRNnvFB4mQRUbXH5/162qcbLGRbI9xG+Cl99CUUJ9yvhEiMA
        rFYS/vPJ178M6kFiW075h/K31HZyyQs0rx7G7HElVGLEcfOnYTicTFhZ1qEHR9rSEkAF2+p+5Z5+bRiU
        Ef5QQlEpKcJDyml8BYkacTL2qVx/dWufLli4q0/3IvOeo5c3VB7bhGPQtJADvSmCL0E1WB3XMYq/Trk3
        wObdR3/XA4ps8VzuirI6NQY2BmXZ7OK4gJpMpklQRq7jwOkzVlzRh4hsm3sQFe6ov2ZIfb0nIaBQOvap
        QUsbLvXrQURj/OqLdh7uTk57I6ADOktJF7toOjsNAskzS3b+Ls3HsuvLdrT9oDsmbz3gQlDw+wwpiwZu
        QQqBJwyCUUkZu+BfHseBWC6319Z2U4Z7Z89XoV6Ih2mWtynpYpcKCMcea+uALxGAc/M+PGP9CSUpKaMX
        +YphPNY43NK7t/OK39/vQkvWW1Bq+tIQXHLqYvTpt1chptgLLkcIRb+kIz8SqGlZlvPoUYdH9KuQ0dri
        CqDVpV+gZ6fnh8CwTS8Vo4+PdGrudXqltUr6yCLLDLzeFtxW50MPODzSNTJgJGOw4rIjyJi5XAP23Iur
        0LrPvkHqmCZt80gbZYD/Elmo8QoHt9m9YkF4QD2PBpb58lq0sfJ7uT6GPwPLuiD8+dryJhTdQgMCnsRB
        ofe61fnU7pFOhAcmHQIzvakBy5ptHhUMhowEcIetZwejLzW4LkFgebGAVza4zeYdfAaCDY1IAK465R8L
        GC78Tqd7wCAnjUWajRPDT8dtdq9UGZ5EBQsf/FmvjA4GvdUHR6fN18/KyWIVuWAFN+K28g40CYJ2qUms
        rf0wxx6CcrFMAzZj7jq02f4jsuuBecUAHCvGVO9IkUt+ZWNEQeBVZLKiHfUasJlz1qPNjkbcOxoobGi7
        AWN3d4UPTZYT3K7ITRMuNbitunWgmSwJW2pOIljuo5nzNsjnumBe6Tq0fwSl6RE5cDykt+3MmPW2LW1a
        HkrPLED7Gv8MAURYxP4GM8K2+iYU/5U0BgI4eeMOgBdwiZHPwSyXo0xJulDQi9IVpzdYEnUdG6uIDdOt
        MQavcuv+Fl0wKBcX7W7J3NCAEr/lxMJFmWWF7QDamfF84YX3Pm8aZYyJbQCXF9PkHm8BxIERYB6xGYr2
        QuWWOyvbmeCrACQO95j0g8MXnK9cunvkaOuja8/eTFF+Tuh/JIr6F5lOtJbdb3DOAAAAAElFTkSuQmCC
</value>
  </data>
</root>