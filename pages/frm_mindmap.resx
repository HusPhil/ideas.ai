<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbx_mindmap.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAABLtJREFUWEftl39sE2UYx89f+CtKGNG7K8WxpfzYHGIkGgLbXZ2VTV2i4mBmtdNA
        GdYQqEMUkdiFXu9KBGRbbXvwB8mif7h//MtIMJBFCCZKgsCGQTY2t2vdyAxsYJyY+fq8x3v1elxHO9qB
        yb7JN+3e3j3PZ+/73nPPS01pSlOagKzWJfczDLeJZvkzDMMfZFnuVRi+49qvt4EAbBfD8ijJDPcTeAX8
        fGtB8/KeeRiArmIomuFOgIeSQFn+FMxqNVx657U7JlkzZjimA8SYCsPwwZkzlz70KMttvR6UO03T3Cq4
        ZfJBaYb/joAMise22KKKdLrpF/9IxTrnEcbC/24A7aAtZTVw2+SBwsy9oQE4/e6vozEJaW7p8o++3OA6
        arHaB/WgsG87YY/WUdTKu0iY3Mlmq7wXEl7AiYsWV57VAyZAzwl/v7K57gfLbLt6nc7d8NTXUxR/NwmX
        GwHgTpLwH+HoR3+aQWI3nxPGXnv/zU4ATVp62LMHSKjcyGIpnYfhcLJyV02HGZzeLd0Cqtm2+vysfALK
        8DESisrP5+8jX7MrSHQIJ2Ot/KVQT8AUzOjQeQGtbvKc9UQ3vI1j0DRvh9kcBf8M1aA2q3sUP53qbIDd
        ezy9ZkDjORKTTjhcq2QtBjYGZdkyZ1ZAi4uLp0EZGcCB5y1a3mUGcSOH+0RUu90dtxaUX8wJKJQOSQva
        2L71ihlEOsZL7xTWDs0uLB82AX2KpMtcNF1WAIHUNwtfszLpYfn42y1o81fvZeRNbQ2ost552Trn2T/+
        g+SHH7HyNpIyc8F/eQAHYmfZR8K/iircmiZPYhayYZrldpN0mUsDhM+LoR7heC4AS6urf9zXtyuPpExf
        +iWG/dgciQXW3MwSN3zZgKrWu9Cc+Y4E3GOFz6HAsW0ooogjUUX0IYTSb+n0DwnUtJLW3z55MBITL2mQ
        6bq5S0B1O+qRreT5BBj240teRI2HP0y6NhwXXST9+NKXGVjeI3hMPi7fA/Utrg84njHYWzvXobkLlyeB
        FT39Alrb8g7S9rTeckxyqwA3kr5Q4w4Hj0XjgRXGgGZOBVay9CXk2bterY/Ge2BlroJDPuRLr9GAgIdx
        UJi9Ie19CnvkoDGw3hqYzQC2cNl4YNJf0HO2hvrE9EsNrksQWG0WcGeDx8IDUiEEGjMmwIauJnMwRbwS
        UaSmvf1Bq5o0EyUdnBiuCI8B3A5jkgSYYfM/UZoaDOJcxmByr8CqyTKVvmEFH8JjbR2+abC8g1qSz3oD
        qNbvRgXzk8EWlVWhDa1eFOk3BRsGsOCE6p1e+pafHIyosBJ8XZ8MjgLXgW3EYIrZUkoXYJ81yt3B6WqC
        m5X+0IRLDR4L9Qrt+pLg/dyLoItGT/JV6vcUYAPw+YEc8z2gBs6GzI6dULN2FyxwQMmoQJ+e2Z4ASNnE
        KmIPzNjG/T2+7HfSGAjg1IM7AJ7EJUb9DmYtdvWVZAoFhhrWFY1L9WnXsYlKd2BKGC8lbpVSgJ2K9Et1
        bagt90dOLFyUWZb3AmjngsUVJ71fvGu6x6Ix8fuwIlZl9HLPtmAvRYxgsPnbZUVykEturaC9WgYzNUrA
        vpFjwVLy0+2jfQMBOhT355M/p/Q/EkX9C8+NTc0oLFA7AAAAAElFTkSuQmCC
</value>
  </data>
</root>