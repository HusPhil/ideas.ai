<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADwAAAA8CAYAAAA6/NlyAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAACBxJREFUaEPtWWlsVFUUHlYjbmHrmzdtJVRBREGEaASZeZ1pp9N9ZTozpcQKCi5I
        wLIYZAkUgigJoIQABggg/GAVyxaWAgkoQQmyCLJMCyquYUcRqhzPeb0zc+97rw3LDKU4X/Il7TvnvXu+
        9+4599w7piiiiCKKKKK47+Fu0qaNVbZYlG5msy2daDL1aMaM9wdatkx+TLJYPZJsWyKZbX+YZQV4SrKy
        gbk2bMTEOCSzWZlplm1XtCK1jIt76UF2W4NEI0myvo1CLxiJM2AFu6/hoXXrXo/gV11rIIrRdkEyK6tx
        ak/HKT6SpnqD/bqS1DMGxewzEHpdzV/J6ridAtW5c+fm+BKnYq6vxyKXxi7XL1q1evHRWsRWyLLSibnd
        FvD+odzzrsuyNYWZ6g2NDKbxDfwa49HWuMbFGHCqrwx+bzH4fdOh0rcOKr27kHuRW5AL0FZq7Zk0T/Ps
        S21ibR3YI+4+agqUEBCKtQ5iZh0AxjeGk0X5KHAbCvr3ht8HGxflwdKPs+HP77yA1wX+/o0HunW1V/Nj
        0GwymZSm7JF3D+rSo63GNV/WEGXDMl5fNTe36vrxkLBZZVnBe/vmuwSxAZ7Y7oYOT9pDYyCxLgxhj717
        wKk8gw8CSUuMbhoDuJtMHpkenPavuF1w9agXzu3Hr9fFEby/fftEQ8HEVXNygn5EzO2zstyjBRsi8qAO
        StNUYEHRFyg4nvoA5uPK14pcQsBG9OWlGIoNsE9miuDvtCZNYsNEHpJF8fKD47KxiJmCUPO10rucgh1c
        kioEa8RslxP+OqLP4wD3rCkQ/HNSndfghCeeDRdZ0NrKDy5JNjszqcBczvfmpOwtn58Hy2fngGwJ+dbF
        tCQnvPVKKowZkg4XD3p0onu9kBT0jY9PxLQoPAi/FD/Eho0YGosbAdsFvqkg8SEb5pslMfg3MTZWgYIM
        J7zqdQk5rGXpwDSd4LFD0wUfeqE4i2azoSMD2uLxg1K7yEwqLBb7m7ydp6N3Mpze5Q4KoIpdNjzD0Le4
        QJ/TFcvyBZ9p72fS9Wqo8t1Rg1MnsNvpzg+K+TuNmVQc2OgusfVKFgIjxj+uCGJ50pLE+3bqZId95X10
        fid3uAW/kW+xWeD3CS89rJCkxAx+UElSRjCTCmwoKqpP+KB8Qa4QnDvTqRMQ4Jp5ou+cKVmGfhcPegW/
        kkK2dvt9N+C45wkWQnhBBYkfFL/wO8xkgtNeC3VQFMT5bz1CcJSzfPA8ty0Vp+qHNVNVR0oB3s+Tw017
        v280CyO8kOXEl/lBUXBwPYRKT79AAJsW54GFK1jdnnWoAQcD5Fg2XCxGsXEKDPC54MyeQsHvxy8LBb8h
        A7jC5vdtZ2GEFzExvRP4QbHjms9MNJ1n0OCHN7vBEitWZyIVqGCAjIc29YGEBL0vsShfLFyU17x90gh+
        JngvAZgasVDCB9q041IUbOhxiTrKTPiFveU0+PqFYk7ypAJFObt1aR5MHpFRq1gircshQT6YOyVbsC+c
        li3YocptZqGEF9h47OAHDmzZUDBu8Xxqr0ydE9m0jX9d7NghEYb0T4Uuz9ih+3MO2L2yQBCkbS/9OzVV
        v8rztBpguIHTeDg/ML6AUXQd82gPH8BZ3CBQu+jJFgM14uO4bO1dKwrkSVtF6q4C/tR16fz83q5qgOEG
        bRT4YHFa/0RTHQfdqgsCeRDzlPc3InVglw/r28kAJ5RmCv7jsOvS+Z0qbs9CDD9w0Ao+AFyuxuEbXqgL
        AjnlPTHYEo8LZk/Khn59Qg0HTee/vzeu4tSw0AsJ+OILh+82axoTv+8f2p2x8MIPOpgLBEDEFvPa8lk5
        apXW8qMxIcHt2iWq05Ou03QfPThdrca7VuTr7iNSE5PlrKkHPKmRoVoR9PX7jrDQIgfM3RV8EPFxib//
        9JW4dhIvHfLAG/1SIcmaBJ9/mquz10Y6Ahr2WpoglKcoOsKbCAIdz+LAP/NBuBzJV7WB3w6vHfPBO/1r
        FxtgbloKXKHzML/XycKKLGTZZsWidTUQQLt2yt9GAm6FdI6VaTCNSwelwdTRYj0gpic7ryYnJz/GQoo8
        sIjkYg7/iYP/27mTowyDvkyBH93qVsmLqYvUSk7EboyWKK0o6sUpn8nPSDS2uDvbtlUeZiFFHuqBPE5x
        +hsqi0bNnBA6kez1YpJaqTcvyQPK8QsHPPAPBv/r3kLYv74A5n2QpXZgcdhD8yICpBMQ8udfzj0hOgD4
        ZmCz57va/9IGdKvs2MEOyz7JEYTynDIqQzizJtab6IQE+2faYG6WtFt6uyQVfvu69kYEl6Eb4PcU4Uox
        UXt/vYimH8Jc9qQJGU7nNaOdkxGf6+JQc/iH3fqlTaAqNrT/vWdEE+AHd+zpL937NyzMUzf2tB5TASrM
        SoGBxanqwRzteo5t0x/p8KQdGN27eHr2ddp3s8cHgf39ZJ1os21TvfwsA2cyW1BjgIFXa4XcDI9XaPbX
        KI49WoCRaLw2lpnvPuh0EafianVKGgirjduW5v1qIOSmRONXPo+X6/wlM+KA00UJlIPI7epJhV5kNdqO
        1MwKT8r48e7muDnZwgtRWbto4Sdci8X+FDPdG1B/K8bNO1QVdaMtHhx2N2emINSTFrNtKy9EpYFo9Cvl
        fSRJyWSmhoWbFY3/f8HbLZbeHZmp4aEO0Wvx+rtm2VbOX8eW9xzeVr85fKeoVbQRzcoYdlvDBommddZQ
        ZJC2dfWyDkcOSlP8gmNp6eGFqv+rX/a+EiugMS09VI3ZEtSwczaKKKKIIor/L0ym/wAyaYha1XD3cAAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>