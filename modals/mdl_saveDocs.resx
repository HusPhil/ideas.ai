<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAA9JJREFUaEPtWU1IVFEUnsKQohLHmnffOCqYRViGYkkN+t7MqGGZlebkjLUMgha1
        CVtFm5CgTZtauGiRCFFQSAVJRVLC5FggklHhDBmFtIo2/ZB1u+fNuc/7Zp7OiOP8xHzw8fDcc+79zrt/
        542WHHLIIXmw2TySJKsPJKL8ILJKjVRmWVvQbler0T3zQIg6ECvcSImo79A98yDJygcz0dGUZXUDhmQW
        2Ax85iKLSpx2NGtYqC1jwNb5FBfpcOy2ollDViQgyw3H2AZ+yzbrRTRZaNgXpGE/ra7yaOKBM8GjlIb8
        L9AlswHiTRNgNnTJbGRVAoQovdodwJ5oyq4E2Bn/CwTCE01ZNgMoEIimXAIpRS6BdCMbE1jBCrjLrISY
        EcUDsd00AWDlVjdlsdcsltpV6Jp6ENJwUhTFaXaM7qwxJqCTqOfRNfVgl1ZfrCjlt9lF1nepjZaVuaJ8
        GYk6iK6pBxv8uCiGLYkebNLBE+C8dfUQtRcLiRD1LLqmA2oefEIKSfxlb/8UNmoQxd+/3k6LHbovoxJg
        ZfdqdE0PKipa8tlSeigm0X/l4B9ROHD4ZgctLZ0T76lvol/HuyLtIf8sDXelbyZkuXYN27jPuDh4y3f7
        Duvig4NHaHn53LJx1jXSL2MoXmf3OewuPSgsbCpge+AlF1lS4qJD/e301b1OWrHJrYuvrfbQT4HIPaAz
        5L9B6YWV2FX6QEj9RrYnJrlYOHW2bJ578zU7PHR6xBst/g59quZhF+kHfO+K38acVdvcdGo4RvwQfd+S
        j6HJhWRX2tiSGOM1Pif8DXZ22uxH1xgQ4i5jviEes73SQycfdRrFh/1P6EevdgItZSxTSJKrVexoPoIf
        hsSgqMi5ziarJzaXu07PBLsCBvEhX4C+9q4Fv2SMFQNxM8bhKIYsCBryFjDhYxHx/nE63V2ITUkfS4M4
        lVZr3Xo0a4DThrex8/8nmuOCLRcrS+AMPNGkYTnGMi2LRYjtCXJCkvbYIDZyZygjJj5xx0JTfJgF8R+o
        gHDGiz6J0CYr3dCPJDV4zNphJrSBEHw80QeXYPwfxMQgNBlqmt6eVuow1DRxGWcGjBUsgI8l+nEbuswP
        MQhNhgSiiS5JBe9b1JLweGIQmv7vBJaTohZuQ0nzQzza4CgDm9hpqvhtwqeLh1Kc2zWRC0G7vjFQJBRn
        8GnIO/r+xkfb9jbH+C0H9zU2LyIBST1g1gnQuatR7+j57Q5Tn+Xg44H2xBMAQO0B/1UUl1OqZwDuG3jz
        oviEE4iG2EG6iZIWB3Yzjpp1lnKyShYl5ZDD0mGx/AOfrFPA9OfGxwAAAABJRU5ErkJggg==
</value>
  </data>
</root>