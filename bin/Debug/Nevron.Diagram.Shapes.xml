<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nevron.Diagram.Shapes</name>
    </assembly>
    <members>
        <member name="T:Nevron.Diagram.Shapes.BasicShapes">
            <summary>
            Enumerates the predefined basic shapes 
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Rectangle">
            <summary>
            Rectangle.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Square">
            <summary>
            Square.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Ellipse">
            <summary>
            Ellipse.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Circle">
            <summary>
            Circle.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.RoundedRectangle">
            <summary>
            Rounded rectangle.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Triangle">
            <summary>
            Triangle.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Diamond">
            <summary>
            Diamond.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Pentagon">
            <summary>
            Pentagon.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Hexagon">
            <summary>
            Hexagon.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Heptagon">
            <summary>
            Heptagon.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Octagon">
            <summary>
            Octagon.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Pentagram">
            <summary>
            Pentagram.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Hexagram">
            <summary>
            Hexagram.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Heptagram">
            <summary>
            Heptagram.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Octagram">
            <summary>
            Octagram.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.RightTriangle">
            <summary>
            Right triangle.
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BasicShapes.Table">
            <summary>
            Table shape.
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.FlowChartingShapes">
            <summary>
            Enumerates the predefined flowcharting shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Process">
            <summary>
            Process
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Decision">
            <summary>
            Decision
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Document">
            <summary>
            Document
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.PredefinedDocument">
            <summary>
            Predefined document
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.MultiDocument">
            <summary>
            Multi document
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.PredefinedProcess">
            <summary>
            Predefined process
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.StoredData">
            <summary>
            Stored data
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.InternalStorage">
            <summary>
            Internal storage
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.SequencialData">
            <summary>
            Sequencial data
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.DirectData">
            <summary>
            Direct data
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.ManualInput">
            <summary>
            Manual input
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.ManualOperation">
            <summary>
            Manual operation
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Card">
            <summary>
            Card
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.PaperTape">
            <summary>
            Paper tape
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Display">
            <summary>
            Display
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Preparation">
            <summary>
            Preparation
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.LoopLimit">
            <summary>
            Loop limit
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Termination">
            <summary>
            Termination
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Collate">
            <summary>
            Collate
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Delay">
            <summary>
            Delay
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Extract">
            <summary>
            Extract
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Merge">
            <summary>
            Merge
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Or">
            <summary>
            Or 
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Sort">
            <summary>
            Sort
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.SummingJunction">
            <summary>
            Summing junction
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Database">
            <summary>
            Database
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.OnPageReference">
            <summary>
            On page reference
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.OffPageReference">
            <summary>
            Off page reference
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.ProcessIso9000">
            <summary>
            Process Iso 9000
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlowChartingShapes.Transport">
            <summary>
            Transport
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.SymbolShapes">
            <summary>
            Enumerates the predefined symbol shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Skull">
            <summary>
            Skull
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Radioactive">
            <summary>
            Radioactive
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Recycle">
            <summary>
            Recycle
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Man">
            <summary>
            Man 
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Woman">
            <summary>
            Woman
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Handicapped">
            <summary>
            Handicapped
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.YinYang">
            <summary>
            Yin-Yang
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Heart">
            <summary>
            Heart
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Flower">
            <summary>
            Flower
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Apple">
            <summary>
            Apple
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Bowtie">
            <summary>
            Bowtie
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Male">
            <summary>
            Male symbol
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Female">
            <summary>
            Female symbol
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Book">
            <summary>
            Book
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.StickFigure">
            <summary>
            Stick figure
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Sun">
            <summary>
            Sun
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Moon">
            <summary>
            Moon
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Orb">
            <summary>
            Orb
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.SimpleOrb">
            <summary>
            SimpleOrb
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.PillButton">
            <summary>
            Pill Button
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.MainButton">
            <summary>
            Main Button
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.GlossyButton">
            <summary>
            Glossy Button
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.AquaPill">
            <summary>
            Aqua Pill
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.HumanIcon">
            <summary>
            Human Icon
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.HumanIcon2">
            <summary>
            Human Icon 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.HumanIcon3">
            <summary>
            Human Icon 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.HumanIcon4">
            <summary>
            Human Icon 4
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.MaleFigure">
            <summary>
            Male Figure
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.FemaleFigure">
            <summary>
            Female Figure
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.FlatFigure">
            <summary>
            Flat Figure
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.NewActor">
            <summary>
            New Actor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.NewActor2">
            <summary>
            New Actor 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.NewActor3">
            <summary>
            New Actor 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.NewActor4">
            <summary>
            New Actor 4
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.BubbleFigure">
            <summary>
            Bubble Figure
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.RoleIcon">
            <summary>
            Role Icon
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.RoleIcon2">
            <summary>
            Role Icon 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.UserIcon">
            <summary>
            User Icon
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users1">
            <summary>
            Users 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users2">
            <summary>
            Users 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users3">
            <summary>
            Users 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users4">
            <summary>
            Users 4
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users5">
            <summary>
            Users 5
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users6">
            <summary>
            Users 6
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users7">
            <summary>
            Users 7
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SymbolShapes.Users8">
            <summary>
            Users 8
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.TrafficSignsShapes">
            <summary>
            Enumerates the predefined traffic signs shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoTraffic">
            <summary>
            No traffic
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoEntry">
            <summary>
            No entry
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoParking">
            <summary>
            No parking
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoParkingStop">
            <summary>
            No stopping and/or parking
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.SpeedLimit">
            <summary>
            Speed limit
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoLeftTurn">
            <summary>
            No left turn
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoRightTurn">
            <summary>
            No right turn
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.KeepDirection">
            <summary>
            Keep direction
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.GiveWay">
            <summary>
            Yield/Give way
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.Highway">
            <summary>
            Highway
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.DeadEnd">
            <summary>
            Dead end street
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.OneWay">
            <summary>
            One way street
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.RailCrossing">
            <summary>
            Rail crossing ahead
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.ParkingSign">
            <summary>
            Parking
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.ParkingTimeSign">
            <summary>
            Parking with timer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.StopSign">
            <summary>
            Stop!
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.EURouteSign">
            <summary>
            European route sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.IntersectionSign">
            <summary>
            Intersection
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.TrafficLightAhead">
            <summary>
            Traffic light ahead
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.RoadNarrowsOne">
            <summary>
            One lane narrows
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.RoadNarrows">
            <summary>
            Road narrows
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.UnevenRoad">
            <summary>
            Uneven road
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.DoubleCurve">
            <summary>
            Attention, turns ahead
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.AttentionSign">
            <summary>
            Attention!
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.HeightLimit">
            <summary>
            Height limit
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoUTurn">
            <summary>
            No U-turn
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.Recommended">
            <summary>
            Recommended (speed)
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.AttentionPeds">
            <summary>
            Attention, pedestrians
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.AttentionRoundway">
            <summary>
            Roundway
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.TurnAhead">
            <summary>
            Turn ahead
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoOvertake">
            <summary>
            No overtaking
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.NoTruckOvertake">
            <summary>
            No overtaking for trucks
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.CautionSlippery">
            <summary>
            Caution, slippery road
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.EndLimits">
            <summary>
            End of limits
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.SteepHill">
            <summary>
            Steep hill
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.Tunnel">
            <summary>
            Tunnel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.FallingRocks">
            <summary>
            Attention, falling rocks
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.Avion">
            <summary>
            Low flying aircraft
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.TwoWayTraffic">
            <summary>
            Two way traffic
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.RiverBank">
            <summary>
            Quayside/Riverbank
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.WindSign">
            <summary>
            High winds
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.RightWay">
            <summary>
            Right of way
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.EndRightWay">
            <summary>
            End right of way
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.RoadWork">
            <summary>
            Attention, roadworks ahead
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USCaution">
            <summary>
            US caution sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USInterstate">
            <summary>
            US interstate sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USRoad">
            <summary>
            US road/route sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USSpeedLimit">
            <summary>
            US speed limit sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USTrafficLight">
            <summary>
            US traffic light sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USTwoWayTraffic">
            <summary>
            US two way traffic sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USRoadWork">
            <summary>
            US road work sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USSlipperyRoad">
            <summary>
            US slippery road sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USPedestrian">
            <summary>
            US pedestrian sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TrafficSignsShapes.USFallingRocks">
            <summary>
            US falling rocks sign
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NetworkShapes">
            <summary>
            Enumerates the predefined network shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Computer">
            <summary>
            Computer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Server">
            <summary>
            Server
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Printer">
            <summary>
            Printer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Laptop">
            <summary>
            Laptop
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.PDA">
            <summary>
            Personal digital assistant
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Storage">
            <summary>
            Storage
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Hub">
            <summary>
            Hub/switch/router
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.WiFi">
            <summary>
            Wireless access point/hub/router
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Terminal">
            <summary>
            Terminal
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Cell">
            <summary>
            Cell phone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Scanner">
            <summary>
            Scanner
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Fax">
            <summary>
            Fax
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Copier">
            <summary>
            Copier
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Firewall">
            <summary>
            Firewall
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Projector">
            <summary>
            Projector
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Digicam">
            <summary>
            Digital camera
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.DSLR">
            <summary>
            Digital single lens reflex camera
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Webcam">
            <summary>
            Webcamera
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.DVCam">
            <summary>
            Digital video camera
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.TabletPC">
            <summary>
            Tablet PC
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.UPPC">
            <summary>
            Ultra portable PC
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.MFC">
            <summary>
            Multifunctional device
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.SmartPhone">
            <summary>
            Smartphone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.PMC">
            <summary>
            Portable media center
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.Modem">
            <summary>
            Modem
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.ExternalDrive">
            <summary>
            External drive
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NetworkShapes.MP3">
            <summary>
            MP3 player
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.BrainstormingShapes">
            <summary>
            Enumerates the predefined brainstorming shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Todo">
            <summary>
            To do
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Done">
            <summary>
            Done
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Delete">
            <summary>
            Delete/Cross out
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.NotDone">
            <summary>
            Not done
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Check">
            <summary>
            Check
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.NotTodo">
            <summary>
            Not to be done
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Smiley">
            <summary>
            Smiley
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Frowny">
            <summary>
            Frowny
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Angry">
            <summary>
            Angry
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Info">
            <summary>
            Information
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Time">
            <summary>
            Time
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Idea">
            <summary>
            Idea!
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Bullseye">
            <summary>
            Bullseye/Target
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.BullseyeHit">
            <summary>
            Bullseye/Direct hit
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Flag">
            <summary>
            Flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Task">
            <summary>
            Task
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Attention">
            <summary>
            Attention!
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Appointment">
            <summary>
            Appointment
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Star">
            <summary>
            Star
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.FlashyStar">
            <summary>
            Flashy star
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Highlight">
            <summary>
            Highlight
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.StarFlash">
            <summary>
            Flash
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.StopSign">
            <summary>
            Stop sign
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Cloud">
            <summary>
            Cloud
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.ThunderCloud">
            <summary>
            Thundercloud
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.UrgentStamp">
            <summary>
            Urgent!
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.NB">
            <summary>
            Nota Bene
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Notepad">
            <summary>
            Notepad
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.GreenLight">
            <summary>
            Green light
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.YellowLight">
            <summary>
            Yellow light
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.RedLight">
            <summary>
            Red light
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Examine">
            <summary>
            To examine
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Pause">
            <summary>
            Pause/Break
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Exclamation">
            <summary>
            Exclamation
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Question">
            <summary>
            Question
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Pencil">
            <summary>
            Pencil
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Rainbow">
            <summary>
            Rainbow
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Trash">
            <summary>
            Trash
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Cog">
            <summary>
            Cog
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Cog2">
            <summary>
            Cog2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Medal">
            <summary>
            Medal
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Medal2">
            <summary>
            Medal2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece1">
            <summary>
            Puzzle Piece 1 
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece2">
            <summary>
            Puzzle Piece 2 
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece3">
            <summary>
            Puzzle Piece 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece4">
            <summary>
            Puzzle Piece 4
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece5">
            <summary>
            Puzzle Piece 5
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece6">
            <summary>
            Puzzle Piece 6
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece7">
            <summary>
            Puzzle Piece 7
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece8">
            <summary>
            Puzzle Piece 8
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.PuzzlePiece9">
            <summary>
            Puzzle Piece 9
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BrainstormingShapes.Puzzle">
            <summary>
            Puzzle
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.ElectricalSymbolsShapes">
            <summary>
            Enumerates the predefined electrical symbols shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Battery">
            <summary>
            Battery
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Ground">
            <summary>
            Ground
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.ChassisGround">
            <summary>
            Chassis ground
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Equipotentiality">
            <summary>
            Equipotentiality
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Equipotentiality2">
            <summary>
            Equipotentiality2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Capacitor">
            <summary>
            Capacitor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Capacitor2">
            <summary>
            Capacitor2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Capacitor3">
            <summary>
            Capacitor3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.TrimmerCapacitor">
            <summary>
            Trimmer capacitor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.VariableCapacitor">
            <summary>
            Variable capacitor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Diode">
            <summary>
            Diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.SCR">
            <summary>
            Silicon-controlled rectifier
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.ZenerDiode">
            <summary>
            Zener diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.TunnelDiode">
            <summary>
            Tunnel diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Varicap">
            <summary>
            Varicap
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.SchottkyDiode">
            <summary>
            Schottky diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.ShockleyDiode">
            <summary>
            Shockley diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.ConstantDiode">
            <summary>
            Constant current diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.GunnDiode">
            <summary>
            Gunn diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.LED">
            <summary>
            Light-emitting diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.PhotoDiode">
            <summary>
            Photo diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Lamp">
            <summary>
            Lamp
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.SPST">
            <summary>
            SPST switch
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.SPDT">
            <summary>
            SPDT switch
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.BJTNPN">
            <summary>
            BJT NPN
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.BJTPNP">
            <summary>
            BJT PNP
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.ResistorUS">
            <summary>
            Resistor US
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.PotentiometerUS">
            <summary>
            Potentiometer US
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Resistor">
            <summary>
            Resistor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Potentiometer">
            <summary>
            Potentiometer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Rheostat">
            <summary>
            Rheostat
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Thermistor">
            <summary>
            Thermistor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.LDR">
            <summary>
            Light-dependent resistor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.PresetResistor">
            <summary>
            Preset resistor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Fuse">
            <summary>
            Fuse
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Fuse2">
            <summary>
            Fuse2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Fuse3">
            <summary>
            Fuse3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Inductor">
            <summary>
            Inductor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Transformer">
            <summary>
            Transformer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.VacuumDiode">
            <summary>
            Vacuum diode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.JfetP">
            <summary>
            Jfet P
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.JfetN">
            <summary>
            Jfet N
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.MosfetEnhancementNChannel">
            <summary>
            Mosfet Enhancement mode N-channel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.MosfetEnhancementPChannel">
            <summary>
            Mosfet Enhancement mode P-Channel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.MosfetDepletionPChannel">
            <summary>
            Mosfet Depletion mode P-Channel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.MosfetDepletionNChannel">
            <summary>
            Mosfet depletion mode N-Channel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.DarlingtonPair">
            <summary>
            Darlington pair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.SziklaiPair">
            <summary>
            Sziklai pair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.KlipSel">
            <summary>
            KlipSel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Diac">
            <summary>
            Diac
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Triac">
            <summary>
            Triac
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Aerial">
            <summary>
            Aerial
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.FrameAntenna">
            <summary>
            Frame antenna
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.LoopAntenna">
            <summary>
            Loop antenna
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.AND">
            <summary>
            AND
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.OR">
            <summary>
            OR
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.NOT">
            <summary>
            NOT
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.NAND">
            <summary>
            NAND
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.NOR">
            <summary>
            NOR
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.XOR">
            <summary>
            XOR
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.XNOR">
            <summary>
            XNOR
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Crystal">
            <summary>
            Crystal
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.CircuitBreaker">
            <summary>
            Circuit Breaker
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Transducer">
            <summary>
            Transducer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Thermocouple">
            <summary>
            Thermocouple
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Oscillator">
            <summary>
            Oscillator
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.ACSource">
            <summary>
            AC Source
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.DCSource">
            <summary>
            DC Source
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Latch">
            <summary>
            Latch
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Thermopile">
            <summary>
            Thermopile
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.StrainGauge">
            <summary>
            Strain Gauge
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Touchplate">
            <summary>
            Touchplate
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Resonator2Pin">
            <summary>
            2 pin resonator
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Resonator3Pin">
            <summary>
            3 pin resonator
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.BridgeRectifier">
            <summary>
            Bridge rectifier
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.OpAmp">
            <summary>
            Op Amp
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Heater">
            <summary>
            Heater
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Motor">
            <summary>
            Motor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Galvanometer">
            <summary>
            Galvanometer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Oscilloscope">
            <summary>
            Oscilloscope
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Bell">
            <summary>
            Bell
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Buzzer">
            <summary>
            Buzzer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Speaker">
            <summary>
            Speaker
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Photocell">
            <summary>
            Photocell
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Pentode">
            <summary>
            Pentode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Tetrode">
            <summary>
            Tetrode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Triode">
            <summary>
            Triode
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Diode2">
            <summary>
            Diode2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Generator">
            <summary>
            Generator
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Glowtube">
            <summary>
            Glowtube
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.ElectricalSymbolsShapes.Phototube">
            <summary>
            Phototube
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.SimpleNetworkShapes">
            <summary>
            Enumerates the predefined simple network shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Computer">
            <summary>
            Computer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Server">
            <summary>
            Server
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Printer">
            <summary>
            Printer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Laptop">
            <summary>
            Laptop
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.PDA">
            <summary>
            PDA
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Fax">
            <summary>
            Fax
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.CellPhone">
            <summary>
            Cell phone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.DigitalCamera">
            <summary>
            Digital camera
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Webcam">
            <summary>
            Webcam
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.DataProjector">
            <summary>
            Data projector
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.TabletPC">
            <summary>
            Tablet PC
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.DigitalVideocamera">
            <summary>
            Digital videocamera
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.WiFi">
            <summary>
            WiFi
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Scanner">
            <summary>
            Scanner
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Copier">
            <summary>
            Copier
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.MFD">
            <summary>
            Multufunctional device
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.PMC">
            <summary>
            Personal media center
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.MP3">
            <summary>
            MP3 player
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Modem">
            <summary>
            Modem
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.Hub">
            <summary>
            Hub
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.UPPC">
            <summary>
            Ultra-portable PC
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.SimpleNetworkShapes.ExternalDrive">
            <summary>
            External drive
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.FloorPlanShapes">
            <summary>
            Enumerates the predefined floor plan shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.CoffeeTable">
            <summary>
            Coffee Table
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LargeTable">
            <summary>
            Large Table
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.MagazinesTable">
            <summary>
            Magazines Table
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ConferenceTable">
            <summary>
            Conference Table
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ConferenceTable2">
            <summary>
            Conference Table 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ConferenceTable3">
            <summary>
            Conference Table 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LargeConferenceTable">
            <summary>
            Large Conference Table
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RoundTable">
            <summary>
            Round Table
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.OvalTable">
            <summary>
            Oval Table
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Chair1">
            <summary>
            Chair 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Chair2">
            <summary>
            Chair 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Chair3">
            <summary>
            Chair 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RollingChair1">
            <summary>
            Rolling Chair 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ComfyChair1">
            <summary>
            Comfy Chair 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ComfyChair2">
            <summary>
            Comfy Chair 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ComfyRollingChair">
            <summary>
            Comfy Rolling Chair 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RollingChair2">
            <summary>
            Rolling Chair 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RollingChair3">
            <summary>
            Rolling Chair 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LibraryChair">
            <summary>
            Library Chair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Armchair">
            <summary>
            Armchair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Couch1">
            <summary>
            Couch 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Couch2">
            <summary>
            Couch 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SoftCouch">
            <summary>
            Soft couch
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SoftLoveseat">
            <summary>
            Soft loveseat
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SoftArmchair">
            <summary>
            Soft armchair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.BusinessCouch">
            <summary>
            Business couch
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.BusinessLoveseat">
            <summary>
            Business loveseat
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.BusinessArmchair">
            <summary>
            Business Armchair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Loveseat1">
            <summary>
            Loveseat 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Loveseat2">
            <summary>
            Loveseat 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Bench1">
            <summary>
            Bench 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Bench2">
            <summary>
            Bench 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Bench3">
            <summary>
            Bench 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SimpleDesk">
            <summary>
            Simple Desk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.DrawerDesk">
            <summary>
            Desk with drawers
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.DrawerDesk2">
            <summary>
            Drawer Desk 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ReceptionDesk1">
            <summary>
            Reception Desk 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ReceptionDesk2">
            <summary>
            Reception Desk 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LargeDeskWithSide">
            <summary>
            Large desk with side
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.CornerDesk">
            <summary>
            Corner desk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RoundedDesk1">
            <summary>
            Rounded desk 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RoundedDesk2">
            <summary>
            Rounded desk 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RoundedDeskWithDrawers">
            <summary>
            Rounded desk with drawers
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.WavyDesk">
            <summary>
            Wavy desk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.WavyDesk2">
            <summary>
            Wavy Desk 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.WavyDeskWithKeyboardDrawer">
            <summary>
            Wavy desk with keyboard drawer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.WavyDesk2WithKeyboardDrawer">
            <summary>
            Wavy desk 2 with keyboard drawer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.KidneyDesk">
            <summary>
            Kidney Desk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.TripleDesk">
            <summary>
            Triple desk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.OctagonDesk">
            <summary>
            Octagon Desk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.DeskSystem">
            <summary>
            Desk system
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ExtendedWorkspace">
            <summary>
            Extended workspace
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.BusinessDesk">
            <summary>
            Business desk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.AirportBench">
            <summary>
            Airport Bench
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Chairdesk">
            <summary>
            Chairdesk
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.HeavyLeatherChair">
            <summary>
            Heavy Leather Chair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RoundArmchair">
            <summary>
            Round Armchair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.WoodenChair">
            <summary>
            Wooden Chair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.DirectorChair">
            <summary>
            Director Chair
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Rolltop">
            <summary>
            Rolltop
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.FileCabinet">
            <summary>
            File Cabinet
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.FileCabinet2">
            <summary>
            File Cabinet 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Bookcase">
            <summary>
            Bookcase
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Cabinet">
            <summary>
            Cabinet
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Podium">
            <summary>
            Podium
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.PodiumWithMic">
            <summary>
            Podium with mic
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.RowOfSeats">
            <summary>
            Row of seats
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.WaterCooler">
            <summary>
            Water cooler
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SmallSink1">
            <summary>
            Small sink 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SmallSink2">
            <summary>
            Small sink 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LargeSink1">
            <summary>
            Large sink 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LargeSink2">
            <summary>
            Large sink 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.CornerSink">
            <summary>
            Corner sink
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.BathroomStall">
            <summary>
            Bathroom stall
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.BathroomStall2">
            <summary>
            Bathroom stall 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.HandicappedStall">
            <summary>
            Handicapped stall
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.HandicappedStall2">
            <summary>
            Handicapped stall 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Toilet1">
            <summary>
            Toilet 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Toilet2">
            <summary>
            Toilet 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Bidet">
            <summary>
            Bidet
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SmallTub">
            <summary>
            Small tub
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LargerTub">
            <summary>
            Larger tub
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.CornerTub">
            <summary>
            Corner tub
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.LargeCornerTub">
            <summary>
            Large corner tub
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SquareShower">
            <summary>
            Square shower
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SquareShower2">
            <summary>
            Square shower 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Fridge">
            <summary>
            Fridge
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.AmericanFridge">
            <summary>
            American Fridge
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Microwave">
            <summary>
            Microwave
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Stove">
            <summary>
            Stove
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SmallStove">
            <summary>
            Small Stove
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.KitchenSink">
            <summary>
            Kitchen Sink
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SplitSink">
            <summary>
            Split Sink
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SplitSink2">
            <summary>
            Split Sink 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Flatscreen">
            <summary>
            Flatscreen
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.FlatscreenWithStand">
            <summary>
            Flatscreen With Stand
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.CRT">
            <summary>
            CRT
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.SlimCRT">
            <summary>
            Slim CRT
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.DesktopPC">
            <summary>
            Desktop PC
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Laptop">
            <summary>
            Laptop
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.AllInOnePC">
            <summary>
            All In One PC
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Keyboard">
            <summary>
            Keyboard
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Mouse">
            <summary>
            Mouse
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.ScrollwheelMouse">
            <summary>
            Scrollwheel Mouse
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Printer">
            <summary>
            Printer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Scanner">
            <summary>
            Scanner
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Copier">
            <summary>
            Copier
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Projector">
            <summary>
            Projector
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FloorPlanShapes.Fax">
            <summary>
            Fax
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.FlagsShapes">
            <summary>
            Enumerates the predefined floor plan shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Albania">
            <summary>
            Albanian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Algeria">
            <summary>
            Algerian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Angola">
            <summary>
            Angola flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Argentina">
            <summary>
            Argentinian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Armenia">
            <summary>
            Armenian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Australia">
            <summary>
            Australian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Austria">
            <summary>
            Austrian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Azerbaijan">
            <summary>
            Azerbaijan flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Bahamas">
            <summary>
            Bahaman flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Bahrain">
            <summary>
            Bahrain flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Bangladesh">
            <summary>
            Bangladeshi flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Barbados">
            <summary>
            Barbados flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Belgium">
            <summary>
            Belgian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Benin">
            <summary>
            Benin flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Bolivia">
            <summary>
            Bolivian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.BosniaAndHerzegovina">
            <summary>
            Bosnia and Herzegovina flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Botswana">
            <summary>
            Botswana flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Brazil">
            <summary>
            Brazil flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Bulgaria">
            <summary>
            Bulgarian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.BurkinaFaso">
            <summary>
            Burkina Faso flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Burundi">
            <summary>
            Burundi flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Cameroon">
            <summary>
            Cameroon flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Canada">
            <summary>
            Canadian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.CapeVerde">
            <summary>
            Cape Verde flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.CentralAfricanRepublic">
            <summary>
            Central African Republic flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Chad">
            <summary>
            Chad flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Chile">
            <summary>
            Chile flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.China">
            <summary>
            Chinese flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Colombia">
            <summary>
            Colombian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Comoros">
            <summary>
            Comoros flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.CongoDemocraticRepublicOf">
            <summary>
            Flag of the Democratic Republic of Congo
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.CongoRepublicOf">
            <summary>
            Flag of the Republic of Congo
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.CostaRica">
            <summary>
            Flag of Costa Rica
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.CoteDIvoire">
            <summary>
            Flag of Cote d'Ivoire
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Cuba">
            <summary>
            Cuban flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.CzechRepublic">
            <summary>
            Czech flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Denmark">
            <summary>
            Danish flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Djibouti">
            <summary>
            Djibouti flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.EastTimor">
            <summary>
            East Timor flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Ecuador">
            <summary>
            Ecuador flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Estonia">
            <summary>
            Estonia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Ethiopia">
            <summary>
            Ethiopia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.EuropeanUnion">
            <summary>
            European Union flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Finland">
            <summary>
            Finnish flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.France">
            <summary>
            French flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Gabon">
            <summary>
            Gabon flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Gambia">
            <summary>
            Gambia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Georgia">
            <summary>
            Georgia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Germany">
            <summary>
            German flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Ghana">
            <summary>
            Ghana flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Greece">
            <summary>
            Greek flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Grenada">
            <summary>
            Grenada flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Guinea">
            <summary>
            Guinea flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.GuineaBissau">
            <summary>
            GuineaBissau flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Guyana">
            <summary>
            Guyana flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Honduras">
            <summary>
            Honduras flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Hungary">
            <summary>
            Hungarian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Iceland">
            <summary>
            Icelandic flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.India">
            <summary>
            Indian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Indonesia">
            <summary>
            Indonesian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Ireland">
            <summary>
            Irish flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Israel">
            <summary>
            Israeli flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Italy">
            <summary>
            Italian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Jamaica">
            <summary>
            Jamaican flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Japan">
            <summary>
            Japanese flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Jordan">
            <summary>
            Jordanian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Kenya">
            <summary>
            Kenya flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.KoreaNorth">
            <summary>
            North Korea flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.KoreaSouth">
            <summary>
            South Korea flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Kuwait">
            <summary>
            Kuwait flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Laos">
            <summary>
            Laos flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Latvia">
            <summary>
            Latvia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Liberia">
            <summary>
            Liberia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Libya">
            <summary>
            Libya flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Lithuania">
            <summary>
            Lithuania flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Luxembourg">
            <summary>
            Luxembourg flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Macedonia">
            <summary>
            Macedonian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Madagascar">
            <summary>
            Madagascar flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Malawi">
            <summary>
            Malawi flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Malaysia">
            <summary>
            Malaysia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Maldives">
            <summary>
            Maldives flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Mali">
            <summary>
            Mali flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.MarshallIslands">
            <summary>
            Marshall Islands flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Mauritania">
            <summary>
            Mauritania flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Mauritius">
            <summary>
            Mauritius flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Micronesia">
            <summary>
            Micronesia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Monaco">
            <summary>
            Monegasque flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Mongolia">
            <summary>
            Mongolian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Morocco">
            <summary>
            Morocco flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Namibia">
            <summary>
            Namibia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Nauru">
            <summary>
            Nauru flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Nepal">
            <summary>
            Nepal flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.NATO">
            <summary>
            NATO flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Netherlands">
            <summary>
            Dutch flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.NewZealand">
            <summary>
            New Zealand flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Niger">
            <summary>
            Niger flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Nigeria">
            <summary>
            Nigeria flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Norway">
            <summary>
            Norwegian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Pakistan">
            <summary>
            Pakistan flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Palau">
            <summary>
            Palau flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Panama">
            <summary>
            Panama flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.PapuaNewGuinea">
            <summary>
            Papua New Guinea flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Peru">
            <summary>
            Peru flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Philippines">
            <summary>
            Philippines flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Poland">
            <summary>
            Polish flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.PuertoRico">
            <summary>
            Puertorican flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Qatar">
            <summary>
            Qatari flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Romania">
            <summary>
            Romanian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Russia">
            <summary>
            Russian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Rwanda">
            <summary>
            Rwandan flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.SaintKittsAndNevis">
            <summary>
            Saint Kitts and Nevis flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.SaintLucia">
            <summary>
            Saint Lucia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.SaintVincentAndTheGrenadines">
            <summary>
            Saint Vincent and the Grenadines flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Samoa">
            <summary>
            Samoa flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.SaoTomeAndPrincipe">
            <summary>
            Sao Tome and Principe flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Senegal">
            <summary>
            Senegalese flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Serbia">
            <summary>
            Serbian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Seychelles">
            <summary>
            Seychelles flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.SierraLeone">
            <summary>
            Sierra Leone flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Singapore">
            <summary>
            Singapore flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Slovakia">
            <summary>
            Slovakia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Slovenia">
            <summary>
            Slovenia flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.SolomonIslands">
            <summary>
            Solomon Islands flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Somalia">
            <summary>
            Somali flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.SouthAfrica">
            <summary>
            South Africa flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Spain">
            <summary>
            Spanish flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Sudan">
            <summary>
            Sudanese flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Suriname">
            <summary>
            Suriname flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Sweden">
            <summary>
            Swedish flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Switzerland">
            <summary>
            Swiss flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Syria">
            <summary>
            Syrian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Tajikistan">
            <summary>
            Tajikistan flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Tanzania">
            <summary>
            Tanzania flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Taiwan">
            <summary>
            Taiwanese flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Thailand">
            <summary>
            Thai flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Togo">
            <summary>
            Togo flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Tonga">
            <summary>
            Tonga flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.TrinidadAndTobago">
            <summary>
            Flag of Trinidad and Tobago
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Tunisia">
            <summary>
            Flag of Tunisia
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Turkey">
            <summary>
            Turkish flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Tuvalu">
            <summary>
            Tuvalu flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Ukraine">
            <summary>
            Ukrainian flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.UnitedArabEmirates">
            <summary>
            UAE flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.UnitedKingdom">
            <summary>
            United Kingdom
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.UnitedStates">
            <summary>
            USA flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Uzbekistan">
            <summary>
            Uzbekistan flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Venezuela">
            <summary>
            Venezuelan flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Vietnam">
            <summary>
            Vietnamese flag
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FlagsShapes.Yemen">
            <summary>
            Yemeni flag
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.TravelShapes">
            <summary>
            Enumerates the predefined travel shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Mail">
            <summary>
            Mail/Post
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.CurrencyExchange">
            <summary>
            Currency Exchange
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.MedicalOffice">
            <summary>
            Medical Office
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Lockers">
            <summary>
            Lockers
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.BaggageClaim">
            <summary>
            Baggage Claim
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.RentACar">
            <summary>
            Car Garage
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Taxi">
            <summary>
            Taxi
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Bus">
            <summary>
            Bus
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.BaggageCarts">
            <summary>
            Baggage Carts
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Escalator">
            <summary>
            Escalator
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Camping">
            <summary>
            Camping
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Elevator">
            <summary>
            Elevator
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.TramSubway">
            <summary>
            Tram / Subway
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Cafe">
            <summary>
            Cafe
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.SmokingArea">
            <summary>
            Smoking Area
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.NoSmoking">
            <summary>
            No Smoking
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Bar">
            <summary>
            Bar
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Airport">
            <summary>
            Airport
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Restaurant">
            <summary>
            Restaurant
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Gas">
            <summary>
            Gas
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Hotel">
            <summary>
            Hotel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Showers">
            <summary>
            Showers
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Water">
            <summary>
            Water
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.RestArea">
            <summary>
            Rest Area
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Arrow">
            <summary>
            Arrow
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.BarberShop">
            <summary>
            Barber Shop
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.MeetingPoint">
            <summary>
            Meeting Point
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Wardrobe">
            <summary>
            Wardrobe
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Fasten">
            <summary>
            Buckle
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Departures">
            <summary>
            Departure
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Arrivals">
            <summary>
            Arrivals
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Hydrant">
            <summary>
            Hydrant
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Shopping">
            <summary>
            Shopping
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Trains">
            <summary>
            Trains
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Bicycle">
            <summary>
            Bicycle
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Picnic">
            <summary>
            Picnic
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Theatre">
            <summary>
            Theatre
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Marina">
            <summary>
            Marina
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.IceCreamStall">
            <summary>
            Ice Cream
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.SnackfoodStall">
            <summary>
            Snackfood Stall
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.BabyChangingRoom">
            <summary>
            Baby Changing Room
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.LadiesRoom">
            <summary>
            Ladies' Room
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.MensRoom">
            <summary>
            Men's Room
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.ShaversOnly">
            <summary>
            Shavers Only
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Museum">
            <summary>
            Museum
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.NoLittering">
            <summary>
            No Littering
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Gifts">
            <summary>
            Gifts
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Ship">
            <summary>
            Ship
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.Seating">
            <summary>
            Seating
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.PassportCheck">
            <summary>
            Passport Check
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.BaggageCheck">
            <summary>
            Baggage Check
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.TravelShapes.AirConditioning">
            <summary>
            Air Conditioning
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.WeatherShapes">
            <summary>
            Enumerates the predefined weather shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Sunny">
            <summary>
            Sunny
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.ClearNight">
            <summary>
            Clear Night
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.SunnyHot">
            <summary>
            Sunny Hot
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Cloudy">
            <summary>
            Cloudy
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.MostlyCloudy">
            <summary>
            Partly Cloudy
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.MostlyCloudyNight">
            <summary>
            Mostly Cloudy Night
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.PartlyCloudy">
            <summary>
            Partly Cloudy
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.PartlyCloudyNight">
            <summary>
            Partly Cloudy Night
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Rainy">
            <summary>
            Rainy
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Downfall">
            <summary>
            Downfall
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.MixedRainSnow">
            <summary>
            Mixed Rain Snow
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Snow">
            <summary>
            Snow
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Blizzard">
            <summary>
            Blizzard
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Foggy">
            <summary>
            Foggy
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.CloudyFoggy">
            <summary>
            Cloudy and Foggy
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Storm">
            <summary>
            Storm
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.TStorm">
            <summary>
            T-Storm
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Haze">
            <summary>
            Haze
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.NightHaze">
            <summary>
            Night Haze
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Tornado">
            <summary>
            Tornado
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Windy">
            <summary>
            Windy
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Hurricane">
            <summary>
            Hurricane
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.WeatherVane">
            <summary>
            Weather Vane
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.Umbrella">
            <summary>
            Umbrella
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.SingleDrop">
            <summary>
            Single Drop
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.WeatherShapes.SingleFlake">
            <summary>
            Single Flake
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.FoodShapes">
            <summary>
            Enumerates the predefined weather shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Burger">
            <summary>
            Burger
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.IceCone">
            <summary>
            Ice Cream
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.IceStick">
            <summary>
            Ice Stick
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Cup">
            <summary>
            Cup
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Mug">
            <summary>
            Mug
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Pizza">
            <summary>
            Pizza
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.PizzaSlice">
            <summary>
            Pizza Slice
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Fries">
            <summary>
            Fries
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.SoftDrink">
            <summary>
            Soft Drink
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.MartiniGlass">
            <summary>
            Martini Glass
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Fork">
            <summary>
            Fork
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Knife">
            <summary>
            Knife
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Spoon">
            <summary>
            Spoon
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.TallDrink">
            <summary>
            Tall Drink
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.StrongDrink">
            <summary>
            Strong Drink
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Shotglass">
            <summary>
            Shotglass
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.TallShotglass">
            <summary>
            Tall Shotglass
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.HotDog">
            <summary>
            Hot Dog
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Muffin">
            <summary>
            Muffin
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Cake">
            <summary>
            Cake
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Sushi">
            <summary>
            Sushi
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Croissant">
            <summary>
            Croissant
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Strawberry">
            <summary>
            Strawberry
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Apple">
            <summary>
            Apple
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Pear">
            <summary>
            Pear
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Pineapple">
            <summary>
            Pineapple
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Banana">
            <summary>
            Banana
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Cherries">
            <summary>
            Cherries
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Tomato">
            <summary>
            Tomato
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Eggplant">
            <summary>
            Eggplant
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.BellPepper">
            <summary>
            BellPepper
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.Carrot">
            <summary>
            Carrot
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FoodShapes.ChiliPepper">
            <summary>
            ChiliPepper
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.FilesAndFoldersShapes">
            <summary>
            Enumerates the predefined Files and Folders shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.OpenFolder">
            <summary>
            Open Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.ClosedFolder">
            <summary>
            Closed Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.LargeFolder">
            <summary>
            Large Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.NewFile">
            <summary>
            New File
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.BlankFile">
            <summary>
            Blank File
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.ClassyFolder">
            <summary>
            Classy Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.SimpleFolder">
            <summary>
            Simple Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.SimpleEmptyFolder">
            <summary>
            Simple Empty Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.BusinessFolder">
            <summary>
            Business Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.Clipboard">
            <summary>
            Clipboard
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.ClipboardFull">
            <summary>
            Clipboard Full
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.Files">
            <summary>
            Files
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.SmoothFolder">
            <summary>
            Smooth Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.RoundedFolder">
            <summary>
            Rounded Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.FileFolder">
            <summary>
            File Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.CandyFolder">
            <summary>
            Candy Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.ShinyFolder">
            <summary>
            Shiny Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.FlatFolder">
            <summary>
            Flat Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.Binder">
            <summary>
            Binder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.Folders">
            <summary>
            Folders
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.Documents">
            <summary>
            Documents
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.Mail">
            <summary>
            Mail
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.FilledFolder">
            <summary>
            Filled Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.MailStamp">
            <summary>
            Mail Stamp
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.FileList">
            <summary>
            File List
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.SoftFolder">
            <summary>
            Soft Folder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.NoteBinder">
            <summary>
            Note Binder
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.FilesAndFoldersShapes.HardBinder">
            <summary>
            Binder
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.BusinessProcessShapes">
            <summary>
            Enumerates the predefined Business Process shapes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Blank">
            <summary>
            Blank
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Activity">
            <summary>
            Activity
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.AndJoin">
            <summary>
            And Join
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.AndSplit">
            <summary>
            And Split
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Decision">
            <summary>
            Decision
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Human">
            <summary>
            Human
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Mail">
            <summary>
            Mail
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.ManualActivity">
            <summary>
            Manual Activity
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.ManualActivity2">
            <summary>
            Manual Activity 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Move">
            <summary>
            Move
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.OrJoin">
            <summary>
            Or Join
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.OrSplit">
            <summary>
            Or Split
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Organization">
            <summary>
            Organization
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Phone">
            <summary>
            Phone
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Question">
            <summary>
            Question
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Result">
            <summary>
            Result
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Routing">
            <summary>
            Routing
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Split">
            <summary>
            Split
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Start">
            <summary>
            Start
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Stop">
            <summary>
            Stop
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.StopAccepted">
            <summary>
            Stop Accepted
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.StopRejected">
            <summary>
            Stop Rejected
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.SubActivity">
            <summary>
            Sub Activity
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.SubGraph">
            <summary>
            Sub Graph
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Tools">
            <summary>
            Tools
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Warning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Timer">
            <summary>
            Timer
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Cancel">
            <summary>
            Cancel
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Compensation">
            <summary>
            Compensation
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Rule">
            <summary>
            Rule
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Link">
            <summary>
            Link
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Signal">
            <summary>
            Signal
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Terminate">
            <summary>
            Terminate
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Multiple">
            <summary>
            Multiple
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.GatewayXOR1">
            <summary>
            Gateway XOR 1
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.GatewayXOR2">
            <summary>
            Gateway XOR 2
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.GatewayXOR3">
            <summary>
            Gateway XOR 3
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.GatewayOR">
            <summary>
            Gateway OR
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.GatewayAND">
            <summary>
            Gateway AND
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.GatewayMerge">
            <summary>
            Gateway Merge
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Repetitive">
            <summary>
            Repetitive
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.MultipleInstances">
            <summary>
            Multiple Instances
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.AdHoc">
            <summary>
            Ad-Hoc
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Excellent">
            <summary>
            Excellent
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Good">
            <summary>
            Good
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Average">
            <summary>
            Average
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Poor">
            <summary>
            Poor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.BusinessProcessShapes.Unacceptable">
            <summary>
            Unacceptable
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NBasicShapesFactory">
            <summary>
            The NBasicShapesFactory class is used to produce basic shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NBasicShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined basic shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateShape(Nevron.Diagram.Shapes.BasicShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="basicShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.GetEnumType">
            <summary>
            Overriden to return the BasicShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Overriden to create the shape info for the basic shape at the specified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateRectangle">
            <summary>
            Creates the rectangle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateSquare">
            <summary>
            Creates the square shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateEllipse">
            <summary>
            Creates the ellipse shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateCircle">
            <summary>
            Creates the circle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateRoundedRectangle">
            <summary>
            Creates the rounded rectangle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateTriangle">
            <summary>
            Creates the triangle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateDiamond">
            <summary>
            Creates the diamond shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreatePentagon">
            <summary>
            Creates the pentagon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateHexagon">
            <summary>
            Creates the hexagon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateHeptagon">
            <summary>
            Creates the heptagon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateOctagon">
            <summary>
            Creates the octagon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreatePentagram">
            <summary>
            Creates the pentagram shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateHexagram">
            <summary>
            Creates the hexagram shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateHeptagram">
            <summary>
            Creates the heptagram shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateOctagram">
            <summary>
            Creates the octagram shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateRightTriangle">
            <summary>
            Creates the right triangle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBasicShapesFactory.CreateTableShape">
            <summary>
            Creates a table shape.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NBrainstormingShapesFactory">
            <summary>
            The NBrainstormingShapesFactory class is used to produce brainstorming shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined brainstorming shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateShape(Nevron.Diagram.Shapes.BrainstormingShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="brainstormingShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.GetEnumType">
            <summary>
            Overriden to return the BrainstormingShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateTodo">
            <summary>
            Creates the To Do shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateDone">
            <summary>
            Creates the Done shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateDelete">
            <summary>
            Creates the delete/cross out shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateNotDone">
            <summary>
            Creates the not (yet) done shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateCheck">
            <summary>
            Creates the Check shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateNotTodo">
            <summary>
            Creates the not-to-do/not to be done shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateSmiley">
            <summary>
            Creates the smiley shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateFrowny">
            <summary>
            Creates the frowny shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateAngry">
            <summary>
            Creates the angry shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateInfo">
            <summary>
            Creates the information shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateTime">
            <summary>
            Creates the time shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateWarning">
            <summary>
            Creates the warning shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateIdea">
            <summary>
            Creates the idea (lightbulb) shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateBullseye">
            <summary>
            Creates the bullseye/target shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateBullseyeHit">
            <summary>
            Creates the bullseye/strike shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateFlag">
            <summary>
            Creates the flag shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateTask">
            <summary>
            Creates the task shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateNote">
            <summary>
            Creates the note shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateAttention">
            <summary>
            Creates the attention shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateAppointment">
            <summary>
            Creates the appointment shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateStar">
            <summary>
            Creates the star shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateFlashyStar">
            <summary>
            Creates the flashy star shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateHighlight">
            <summary>
            Creates the highligh shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateStarFlash">
            <summary>
            Creates the flash shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateStopSign">
            <summary>
            Creates the stop sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateCloud">
            <summary>
            Creates the cloud shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateThunderCloud">
            <summary>
            Creates the thunder/lightning cloud shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateUrgentStamp">
            <summary>
            Creates the urgent stamp shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateNB">
            <summary>
            Creates the Nota Bene shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateNotepad">
            <summary>
            Creates the notepad shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateGreenLight">
            <summary>
            Creates the green light shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateYellowLight">
            <summary>
            Creates the yellow light (standby) shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateRedLight">
            <summary>
            Creates the red light shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateExamine">
            <summary>
            Creates the Examine shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePause">
            <summary>
            Creates the pause/break shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateExclamation">
            <summary>
            Creates the exclamation point shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateQuestion">
            <summary>
            Creates the question mark shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePencil">
            <summary>
            Creates the pencil shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateCoin">
            <summary>
            Creates the coin shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateRainbow">
            <summary>
            Creates the rainbow shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateTrash">
            <summary>
            Creates the trash shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateCog">
            <summary>
            Creates the cog shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateCog2">
            <summary>
            Creates the cog2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateMedal">
            <summary>
            Creates the medal shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreateMedal2">
            <summary>
            Creates the medal2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece1">
            <summary>
            Creates the puzzle piece 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece2">
            <summary>
            Creates the puzzle piece 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece3">
            <summary>
            Creates the puzzle piece 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece4">
            <summary>
            Creates the puzzle piece 4 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece5">
            <summary>
            Creates the puzzle piece 5 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece6">
            <summary>
            Creates the puzzle piece 6 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece7">
            <summary>
            Creates the puzzle piece 7 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece8">
            <summary>
            Creates the puzzle piece 8 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzlePiece9">
            <summary>
            Creates the puzzle piece 9 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBrainstormingShapesFactory.CreatePuzzle">
            <summary>
            Creates the puzzle shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory">
            <summary>
            The NBusinessProcessShapesFactory class is used to produce symbol shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined symbol shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateShape(Nevron.Diagram.Shapes.BusinessProcessShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="businessProcessShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.GetEnumType">
            <summary>
            Overriden to return the SymbolShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateBlank">
            <summary>
            Creates the Blank shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateActivity">
            <summary>
            Creates the Activity shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateAndJoin">
            <summary>
            Creates the And Join shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateAndSplit">
            <summary>
            Creates the And Split shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateData">
            <summary>
            Creates the Data shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateDecision">
            <summary>
            Creates the Decision shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateHuman">
            <summary>
            Creates the Human shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateInfo">
            <summary>
            Creates the Info shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateMail">
            <summary>
            Creates the Mail shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateManualActivity">
            <summary>
            Creates the Manual Activity shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateManualActivity2">
            <summary>
            Creates the Manual Activity 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateMove">
            <summary>
            Creates the Move shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateOrJoin">
            <summary>
            Creates the OrJoin shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateOrSplit">
            <summary>
            Creates the OrSplit shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateOrganization">
            <summary>
            Creates the Organization shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreatePhone">
            <summary>
            Creates the Phone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateQuestion">
            <summary>
            Creates the Question shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateResult">
            <summary>
            Creates the Result shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateRole">
            <summary>
            Creates the Role shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateRouting">
            <summary>
            Creates the Routing shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateSplit">
            <summary>
            Creates the Split shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateStart">
            <summary>
            Creates the Start shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateStop">
            <summary>
            Creates the Stop shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateStopAccepted">
            <summary>
            Creates the Stop Accepted shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateStopRejected">
            <summary>
            Creates the Stop Rejected shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateSubActivity">
            <summary>
            Creates the Sub Activity shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateSubGraph">
            <summary>
            Creates the Sub Graph shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateTools">
            <summary>
            Creates the Tools shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateWarning">
            <summary>
            Creates the Warning shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateTimer">
            <summary>
            Creates the Timer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateError">
            <summary>
            Creates the Error shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateCancel">
            <summary>
            Creates the Cancel shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateCompensation">
            <summary>
            Creates the Compensation shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateRule">
            <summary>
            Creates the Rule shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateLink">
            <summary>
            Creates the Link shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateSignal">
            <summary>
            Creates the Signal shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateTerminate">
            <summary>
            Creates the Terminate shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateMultiple">
            <summary>
            Creates the Multiple shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateGatewayXOR1">
            <summary>
            Creates the Gateway XOR 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateGatewayXOR2">
            <summary>
            Creates the Gateway XOR 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateGatewayXOR3">
            <summary>
            Creates the Gateway XOR 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateGatewayOR">
            <summary>
            Creates the Gateway OR shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateGatewayAND">
            <summary>
            Creates the Gateway AND shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateGatewayMerge">
            <summary>
            Creates the Gateway Merge shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateRepetitive">
            <summary>
            Creates the Repetitive shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateMultipleInstances">
            <summary>
            Creates the Multiple Instances shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateAdHoc">
            <summary>
            Creates the Ad-Hoc shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateExcellent">
            <summary>
            Creates the Excellent shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateGood">
            <summary>
            Creates the Good shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateAverage">
            <summary>
            Creates the Average shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreatePoor">
            <summary>
            Creates the Poor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NBusinessProcessShapesFactory.CreateUnacceptable">
            <summary>
            Creates the Unacceptable shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NDiagramShapesLoadAssemblyType">
            <summary>
            Used to explicitly load the Nevron.Diagram.Shapes.dll assembly.
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NDiagramShapesLoadAssemblyType.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory">
            <summary>
            The NElectricalSymbolsShapesFactory class is used to produce electrical symbols shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined electrical symbols shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateShape(Nevron.Diagram.Shapes.ElectricalSymbolsShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="electricalSymbolsShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.GetEnumType">
            <summary>
            Overriden to return the ElectricalSymbolsShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateBattery">
            <summary>
            Creates the battery shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateGround">
            <summary>
            Creates the ground shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateChassisGround">
            <summary>
            Creates the chassis ground shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateEquipotentiality">
            <summary>
            Creates the equipotentiality shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateEquipotentiality2">
            <summary>
            Creates the equipotentiality2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateCapacitor">
            <summary>
            Creates the capacitor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateCapacitor2">
            <summary>
            Creates the capacitor2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateCapacitor3">
            <summary>
            Creates the capacitor3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTrimmerCapacitor">
            <summary>
            Creates the trimmer capacitor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateVariableCapacitor">
            <summary>
            Creates the variable capacitor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateDiode">
            <summary>
            Creates the diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateScr">
            <summary>
            Creates the silicon-controlled rectifier
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateZenerDiode">
            <summary>
            Creates the Zener diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTunnelDiode">
            <summary>
            Creates the tunnel diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateVaricap">
            <summary>
            Creates the varicap shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateSchottkyDiode">
            <summary>
            Creates the Schottky diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateShockleyDiode">
            <summary>
            Create the Shockley diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateConstantDiode">
            <summary>
            Creates the constant current diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateGunn">
            <summary>
            Creates the Gunn diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateLed">
            <summary>
            Creates the LED shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreatePhotoDiode">
            <summary>
            Creates the photo diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateLamp">
            <summary>
            Creates the lamp shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateSpst">
            <summary>
            Creates the SPST shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateSpdt">
            <summary>
            Creates the SPDT shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateBjtNpn">
            <summary>
            Creates the BJT-NPN transistor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateBjtPnp">
            <summary>
            Creates the BJT-PNP transistor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateResistorUS">
            <summary>
            Creates the US resistor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreatePotentiometerUS">
            <summary>
            Creates the US potentiometer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateResistor">
            <summary>
            Creates the resistor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreatePotentiometer">
            <summary>
            Creates the potentiometer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateRheostat">
            <summary>
            Creates the rheostat shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateThermistor">
            <summary>
            Creates the thermistor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateLDR">
            <summary>
            Creates the light-dependent resistor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreatePresetResistor">
            <summary>
            Creates the preset resistor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateFuse">
            <summary>
            Creates the fuse shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateFuse2">
            <summary>
            Creates the fuse2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateFuse3">
            <summary>
            Creates the fuse3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateInductor">
            <summary>
            Creates the inductor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTransformer">
            <summary>
            Creates the transformer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateVacuumDiode">
            <summary>
            Creates the vacuum diode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateJfetP">
            <summary>
            Creates the P-channel JFET shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateJfetN">
            <summary>
            Creates the N-channel JFET shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateMosfetEnhN">
            <summary>
            Creates the N-channel enhancement mode MOSFET shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateMosfetEnhP">
            <summary>
            Creates the P-channel enhancement mode MOSFET shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateMosfetDepP">
            <summary>
            Creates the P-channel, depletion mode MOSFET shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateMosfetDepN">
            <summary>
            Creates the N-channel depletion mode MOSFET shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateDarlington">
            <summary>
            Creates the Darlington pair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateSziklai">
            <summary>
            Creates the Sziklai pair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateKlipSel">
            <summary>
            Creates the Klip-Sel transient suppressor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateDiac">
            <summary>
            Creates the diac shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTriac">
            <summary>
            Creates the triac shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateAerial">
            <summary>
            Creates the aerial shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateFrame">
            <summary>
            Creates the frame antenna shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateLoop">
            <summary>
            Creates the loop antenna shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateAND">
            <summary>
            Creates the logic AND shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateOR">
            <summary>
            Creates the logic OR shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateNOT">
            <summary>
            Creates the logic NOT shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateNAND">
            <summary>
            Creates the logic NAND shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateNOR">
            <summary>
            Creates the logic NOR shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateXOR">
            <summary>
            Creates the logic XOR shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateXNOR">
            <summary>
            Creates the logic XNOR shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateCrystal">
            <summary>
            Creates the crystal shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateCBreaker">
            <summary>
            Creates the circuit breaker shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTransducer">
            <summary>
            Creates the transducer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateThermoCouple">
            <summary>
            Creates the thermocouple shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateOscillator">
            <summary>
            Create the oscillator shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateACSource">
            <summary>
            Creates the AC source shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateDCSource">
            <summary>
            Creates the DC source shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateLatch">
            <summary>
            Creates the latch shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateThermopile">
            <summary>
            Creates the thermopile shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateStrainGage">
            <summary>
            Creates the strain gauge shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTouchplate">
            <summary>
            Creates the touchplate shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateResonator2p">
            <summary>
            Creates the 2-pin resonator shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateResonator3p">
            <summary>
            Creates the 3 pin resonator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateBridgeRectifier">
            <summary>
            Creates the bridge rectifier shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateOpAmp">
            <summary>
            Creates the Op Amp shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateHeater">
            <summary>
            Creates the heater shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateMotor">
            <summary>
            Creates the motor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateGalvanometer">
            <summary>
            Creates the galvanometer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateOscilloscope">
            <summary>
            Creates the oscilloscope shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateBell">
            <summary>
            Creates the bell shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateBuzzer">
            <summary>
            Creates the buzzer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateSpeaker">
            <summary>
            Creates the speaker shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreatePhotoCell">
            <summary>
            Creates the photocell shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreatePentode">
            <summary>
            Creates the pentode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTetrode">
            <summary>
            Creates the tetrode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateTriode">
            <summary>
            Creates the triode shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateDiode2">
            <summary>
            Creates the diode2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateGenerator">
            <summary>
            Creates the generator shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreateGlowTube">
            <summary>
            Creates the glowtube shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NElectricalSymbolsShapesFactory.CreatePhotoTube">
            <summary>
            Creates the phototube shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NFilesAndFoldersFactory">
            <summary>
            The NFilesAndFoldersFactory class is used to produce symbol shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined symbol shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateShape(Nevron.Diagram.Shapes.FilesAndFoldersShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="filesAndFoldersShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.GetEnumType">
            <summary>
            Overriden to return the SymbolShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateOpenFolder">
            <summary>
            Creates the Open Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateClosedFolder">
            <summary>
            Creates the Open Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateLargeFolder">
            <summary>
            Creates the Large Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateNewFile">
            <summary>
            Creates the New File shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateBlankFile">
            <summary>
            Creates the New File shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateClassyFolder">
            <summary>
            Creates the Classy Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateSimpleFolder">
            <summary>
            Creates the Simple Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateSimpleEmptyFolder">
            <summary>
            Creates the Simple Empty Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateBusinessFolder">
            <summary>
            Creates the Business Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateClipboard">
            <summary>
            Creates the Clipboard shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateClipboardFull">
            <summary>
            Creates the Clipboard Full shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateFiles">
            <summary>
            Creates the Files shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateSmoothFolder">
            <summary>
            Creates the Smooth Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateRoundedFolder">
            <summary>
            Creates the Rounded Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateFileFolder">
            <summary>
            Creates the File Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateCandyFolder">
            <summary>
            Creates the Candy Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateShinyFolder">
            <summary>
            Creates the Shiny Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateFlatFolder">
            <summary>
            Creates the Flat Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateBinder">
            <summary>
            Creates the Binder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateFolders">
            <summary>
            Creates the Folders shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateDocuments">
            <summary>
            Creates the Documents shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateMail">
            <summary>
            Creates the Mail shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateFilledFolder">
            <summary>
            Creates the Filled Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateMailStamp">
            <summary>
            Creates the Filled Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateFileList">
            <summary>
            Creates the File List shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateSoftFolder">
            <summary>
            Creates the Soft Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateNoteBinder">
            <summary>
            Creates the Note Binder shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFilesAndFoldersFactory.CreateHardBinder">
            <summary>
            Creates the Soft Folder shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NFlagsShapesFactory">
            <summary>
            The NFlagsShapesFactory class is used to produce Flags shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NFlagsShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined Flags shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateShape(Nevron.Diagram.Shapes.FlagsShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="flagsShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.GetEnumType">
            <summary>
            Overriden to return the FlagsShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateAlbania">
            <summary>
            Creates the flag of Albania
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateAlgeria">
            <summary>
            Creates the flag of Algeria
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateAngola">
            <summary>
            Creates the flag of Angola
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateArgentina">
            <summary>
            Creates the flag of Argentina
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateArmenia">
            <summary>
            Creates the shape of the flag of Armenia
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateAustralia">
            <summary>
            Creates the shape of the flag of Australia
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateAustria">
            <summary>
            Creates the Austrian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateAzerbaijan">
            <summary>
            Creates the Azerbaijani flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBahamas">
            <summary>
            Creates the Bahaman flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBahrain">
            <summary>
            Creates the flag of Bahrain
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBangladesh">
            <summary>
            Creates the Bangladeshi flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBarbados">
            <summary>
            Creates the Barbados flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBelgium">
            <summary>
            Creates the Belgium flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBenin">
            <summary>
            Creates the Benin flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBolivia">
            <summary>
            Creates the Bolivian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBosniaAndHerzegovina">
            <summary>
            Creates the Bosnia and Herzegovina flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBotswana">
            <summary>
            Creates the Botswana flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBrazil">
            <summary>
            Creates the Brazilian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBulgaria">
            <summary>
            Creates the Bulgarian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBurkinaFaso">
            <summary>
            Creates the Burkinga Faso flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateBurundi">
            <summary>
            Creates the Burundi flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCameroon">
            <summary>
            Creates the Cameroon flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCanada">
            <summary>
            Creates the Canadian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCapeVerde">
            <summary>
            Creates the Cape Verde flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCentralAfricanRepublic">
            <summary>
            Creates the Central African Republic flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateChad">
            <summary>
            Creates the Chad flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateChile">
            <summary>
            Creates the Chile flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateChina">
            <summary>
            Creates the Chinese flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateColombia">
            <summary>
            Creates the flag of the Colombia
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateComoros">
            <summary>
            Creates the flag of the Comoros
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCongoDR">
            <summary>
            Creates the flag of the Democratic Republic of Congo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCongoR">
            <summary>
            Creates the flag of the Republic of Congo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCostaRica">
            <summary>
            Creates the Costa Rica flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCoteDIvoire">
            <summary>
            Creates the Cote d'Ivoire flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCuba">
            <summary>
            Creates the Cuban flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateCzechRepublic">
            <summary>
            Creates the Czech flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateDenmark">
            <summary>
            Creates the Danish flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateDjibouti">
            <summary>
            Creates the Djibouti flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateEastTimor">
            <summary>
            Creates the East Timor flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateEcuador">
            <summary>
            Creates the Ecuador flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateEstonia">
            <summary>
            Creates the Estonia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateEthiopia">
            <summary>
            Creates the Ethiopian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateEuropeanUnion">
            <summary>
            Creates the European Union's flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateFinland">
            <summary>
            Creates the Finnish flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateFrance">
            <summary>
            Creates the French flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGabon">
            <summary>
            Creates the Gabon flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGambia">
            <summary>
            Creates the Gambian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGeorgia">
            <summary>
            Creates the Georgian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGermany">
            <summary>
            Creates the German flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGhana">
            <summary>
            Creates the Ghana flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGreece">
            <summary>
            Creates the Greek flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGrenada">
            <summary>
            Creates the Grenada flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGuinea">
            <summary>
            Creates the Guinea flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGuineaBissau">
            <summary>
            Creates the Guinea-Bissau flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateGuyana">
            <summary>
            Creates the Guyana flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateHonduras">
            <summary>
            Creates the Honduras flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateHungary">
            <summary>
            Creates the Hungarian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateIceland">
            <summary>
            Creates the Icelandic flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateIndia">
            <summary>
            Creates the Indian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateIndonesia">
            <summary>
            Creates the Indonesial flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateIreland">
            <summary>
            Creates the Irish flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateIsrael">
            <summary>
            Creates the Israeli flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateItaly">
            <summary>
            Creates the Italian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateJamaica">
            <summary>
            Creates the Jamaican flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateJapan">
            <summary>
            Creates the Japanese flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateJordan">
            <summary>
            Creates the Jordanian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateKenya">
            <summary>
            Creates the Kenyan flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateKoreaNorth">
            <summary>
            Creates the North Korean flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateKoreaSouth">
            <summary>
            Creates the South Korean flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateKuwait">
            <summary>
            Creates the Kuwait flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateLaos">
            <summary>
            Creates the Laos flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateLatvia">
            <summary>
            Creates the Latvian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateLiberia">
            <summary>
            Creates the Liberian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateLibya">
            <summary>
            Creates the Libyan flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateLithuania">
            <summary>
            Creates the Lithuanian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateLuxembourg">
            <summary>
            Creates the Luxembourg flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMacedonia">
            <summary>
            Creates the Macedonian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMadagascar">
            <summary>
            Creates the Madagascar flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMalawi">
            <summary>
            Creates the Malawi flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMalaysia">
            <summary>
            Creates the Malaysia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMaldives">
            <summary>
            Creates the Maldives flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMali">
            <summary>
            Creates the Mali flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMarshallIslands">
            <summary>
            Creates the Marshall Islands flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMauritania">
            <summary>
            Creates the Mauritania flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMauritius">
            <summary>
            Creates the Mauritius flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMicronesia">
            <summary>
            Creates the Micronesia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMonaco">
            <summary>
            Creates the Monegasque flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMongolia">
            <summary>
            Creates the Mongolian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateMorocco">
            <summary>
            Creates the Morocco flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNamibia">
            <summary>
            Creates the Namibia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNauru">
            <summary>
            Creates the Nauru flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNATO">
            <summary>
            Creates the NATO flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNepal">
            <summary>
            Creates the Nepal flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNetherlands">
            <summary>
            Creates the Dutch flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNewZealand">
            <summary>
            Creates the shape of the flag of New Zealand
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNiger">
            <summary>
            Creates the Niger flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNigeria">
            <summary>
            Creates the Nigerian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateNorway">
            <summary>
            Creates the Norwegian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePakistan">
            <summary>
            Creates the Pakistani flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePalau">
            <summary>
            Creates the Palau flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePanama">
            <summary>
            Creates the Panama flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePapuaNewGuinea">
            <summary>
            Creates the Papua New Guinea flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePeru">
            <summary>
            Creates the Peruvian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePhilippines">
            <summary>
            Creates the Philippines flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePoland">
            <summary>
            Creates the Polish flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreatePuertoRico">
            <summary>
            Creates the Puertorican flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateQatar">
            <summary>
            Creates the Qatari flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateRomania">
            <summary>
            Creates the Romanian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateRussia">
            <summary>
            Creates the Russian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateRwanda">
            <summary>
            Creates the Rwandan flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSaintKittsAndNevis">
            <summary>
            Creates the Saint Kitts and Nevis flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSaintLucia">
            <summary>
            Creates the Saint Lucia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSaintVincentAndTheGrenadines">
            <summary>
            Creates the Saint Vincent and the Grenadines flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSamoa">
            <summary>
            Creates the Samoan flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSaoTomeAndPrincipe">
            <summary>
            Creates the Sao Tome and Principe flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSenegal">
            <summary>
            Creates the Senegalese flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSerbia">
            <summary>
            Creates the Serbian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSeychelles">
            <summary>
            Creates the Seychelles flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSierraLeone">
            <summary>
            Creates the Sierra Leone flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSingapore">
            <summary>
            Creates the Singapore flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSlovakia">
            <summary>
            Slovakia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSlovenia">
            <summary>
            Slovenia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSolomonIslands">
            <summary>
            Solomon Islands flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSomalia">
            <summary>
            Somali flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSouthAfrica">
            <summary>
            Creates the South Africa flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSpain">
            <summary>
            Creates the Spanish flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSudan">
            <summary>
            Creates the Sudanese flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSuriname">
            <summary>
            Creates the Suriname flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSweden">
            <summary>
            Creates the Swedish flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSwitzerland">
            <summary>
            Creates the Swiss flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateSyria">
            <summary>
            Creates the Syrian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTajikistan">
            <summary>
            Creates the Tajikistan flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTanzania">
            <summary>
            Creates the Tanzania flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTaiwan">
            <summary>
            Creates the Taiwanese flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateThailand">
            <summary>
            Creates the Thai flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTogo">
            <summary>
            Flag of Togo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTonga">
            <summary>
            Flag of Tonga
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTrinidad">
            <summary>
            Flag of Trinidad and Tobago
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTunisia">
            <summary>
            Creates the Tunisia flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTurkey">
            <summary>
            Creates the Turkish flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateTuvalu">
            <summary>
            Creates the Tuvalu flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateUkraine">
            <summary>
            Creates the Ukrainian flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateUnitedArabEmirates">
            <summary>
            Creates the UAE flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateUnionJack">
            <summary>
            Creates the Union Jack shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateUnitedStates">
            <summary>
            Creates the US flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateUzbekistan">
            <summary>
            Creates the Uzbekistan flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateVenezuela">
            <summary>
            Creates the Venezuelan flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateVietnam">
            <summary>
            Creates the Vietnamese flag
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlagsShapesFactory.CreateYemen">
            <summary>
            Creates the Yemeni flag
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NFloorPlanShapesFactory">
            <summary>
            The NFloorPlanShapesFactory class is used to produce shapes related to floor plans
            </summary>
            <remarks>
            The shapes inside this factory are defined in their actual size.
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.#ctor">
            <summary>
            Default constructor 
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.OriginalMeasurementUnit">
            <summary>
            Overriden to return Millimeter
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined floor plan shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateShape(Nevron.Diagram.Shapes.FloorPlanShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="floorPlanShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.GetEnumType">
            <summary>
            Overriden to return the FloorPlanShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCoffeeTable">
            <summary>
            Creates the coffee table shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLargeTable">
            <summary>
            Creates the large table shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateMagazinesTable">
            <summary>
            Creates the magazines table shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateConferenceTable">
            <summary>
            Creates the conference table shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateConferenceTable2">
            <summary>
            Creates the conference table 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateConferenceTable3">
            <summary>
            Creates the conference table 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLargeConferenceTable">
            <summary>
            Creates the large conference table shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRoundTable">
            <summary>
            Creates the round table shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateOvalTable">
            <summary>
            Creates the oval table shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateChair1">
            <summary>
            Creates the chair 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateChair2">
            <summary>
            Creates the chair 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateChair3">
            <summary>
            Creates the chair 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRollingChair1">
            <summary>
            Creates the rolling chair 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateComfyChair1">
            <summary>
            Creates the comfy chair 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateComfyChair2">
            <summary>
            Creates the comfy chair 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateComfyRollChair2">
            <summary>
            Creates the comfy rolling chair 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRollChair2">
            <summary>
            Creates the comfy rolling chair 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRollChair3">
            <summary>
            Creates the rolling chair 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLibraryChair">
            <summary>
            Creates the library chair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateArmchair">
            <summary>
            Creates the armchair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCouch1">
            <summary>
            Creates the couch 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCouch2">
            <summary>
            Creates the couch 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSoftCouch">
            <summary>
            Creates the soft couch shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSoftLoveseat">
            <summary>
            Creates the soft loveseat shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSoftArmchair">
            <summary>
            Creates the soft armchair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBusinessCouch">
            <summary>
            Creates the business couch shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBusinessLoveseat">
            <summary>
            Creates the business loveseat shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBusinessArmchair">
            <summary>
            Creates the business armchair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLoveseat1">
            <summary>
            Creates the loveseat 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLoveseat2">
            <summary>
            Creates the loveseat 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBench1">
            <summary>
            Creates the bench 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBench2">
            <summary>
            Creates the bench 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBench3">
            <summary>
            Creates the bench 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSimpleDesk">
            <summary>
            Creates the simple desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateDrawerDesk1">
            <summary>
            Creates the drawer desk 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateDrawerDesk2">
            <summary>
            Creates the drawer desk 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateReceptionDesk1">
            <summary>
            Creates the reception desk 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateReceptionDesk2">
            <summary>
            Creates the reception desk 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLargeDeskWithSide">
            <summary>
            Creates the large desk with side shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCornerDesk">
            <summary>
            Creates the corner desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRoundedDesk1">
            <summary>
            Creates the rounded desk 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRoundedDesk2">
            <summary>
            Creates the rounded desk 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRoundedDeskWithDrawers">
            <summary>
            Creates the rounded desk with drawers shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateWavyDesk">
            <summary>
            Creates the wavy desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateWavyDesk2">
            <summary>
            Creates the wavy desk 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateWavyDeskWithKeyboardDrawer">
            <summary>
            Creates the wavy desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateWavyDesk2WithKeyboardDrawer">
            <summary>
            Creates the wavy desk 2 with keyboard drawer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateKidneyDesk">
            <summary>
            Creates the kidney desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateTripleDesk">
            <summary>
            Creates the triple desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateOctagonDesk">
            <summary>
            Creates the octagon desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateDeskSystem">
            <summary>
            Creates the desk system shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateExtendedWorkspace">
            <summary>
            Creates the extended workspace shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBusinessDesk">
            <summary>
            Creates the business desk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateAirportBench">
            <summary>
            Creates the airport bench shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateChairdesk">
            <summary>
            Creates the chairdesk shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateHeavyLeatherChair">
            <summary>
            Creates the heavy leather chair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRoundArmchair">
            <summary>
            Creates the round armchair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateWoodenChair">
            <summary>
            Creates the wooden chair
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateDirectorChair">
            <summary>
            Creates the director chair shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRolltop">
            <summary>
            Creates the rolltop shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateFileCabinet">
            <summary>
            Creates the file cabinet shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateFileCabinet2">
            <summary>
            Creates the file cabinet 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBookcase">
            <summary>
            Creates the bookcase shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCabinet">
            <summary>
            Creates the cabinet shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreatePodium">
            <summary>
            Creates the podium shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreatePodiumWithMic">
            <summary>
            Creates the podium with mic shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateRowOfSeats">
            <summary>
            Creates the row of seats shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateWaterCooler">
            <summary>
            Creates the water cooler shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSmallSink1">
            <summary>
            Creates the small sink 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSmallSink2">
            <summary>
            Creates the small sink 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLargeSink1">
            <summary>
            Creates the large sink 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLargeSink2">
            <summary>
            Creates the large sink 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCornerSink">
            <summary>
            Creates the corner sink shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBathroomStall">
            <summary>
            Creates the bathroom stall shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBathroomStall2">
            <summary>
            Creates the bathroom stall 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateHandicappedStall">
            <summary>
            Creates the handicapped stall 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateHandicappedStall2">
            <summary>
            Creates the handicapped stall shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateToilet1">
            <summary>
            Creates the toilet 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateToilet2">
            <summary>
            Creates the toilet 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateBidet">
            <summary>
            Creates the Bidet shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSmallTub">
            <summary>
            Creates the small tub 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLargerTub">
            <summary>
            Creates the larger tub shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCornerTub">
            <summary>
            Creates the corner tub shape 
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLargeCornerTub">
            <summary>
            Creates the large corner tub shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSquareShower">
            <summary>
            Creates the Square Shower shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSquareShower2">
            <summary>
            Creates the Square Shower 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateFridge">
            <summary>
            Creates the Fridge 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateAmericanFridge">
            <summary>
            Creates the American Fridge shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateMicrowave">
            <summary>
            Creates the microwave shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateStove">
            <summary>
            Creates the Stove shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSmallStove">
            <summary>
            Creates the Small Stove shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateKitchenSink">
            <summary>
            Creates the Kitchen Sink shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSplitSink">
            <summary>
            Creates the Split Sink shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSplitSink2">
            <summary>
            Creates the Split Sink 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateFlatscreen">
            <summary>
            Creates the Flatscreen shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateFlatscreenWithStand">
            <summary>
            Creates the Flatscreen With Stand shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCRT">
            <summary>
            Creates the CRT shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateSlimCRT">
            <summary>
            Creates the Slim CRT shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateDekstopPC">
            <summary>
            Creates the Desktop PC shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateLaptop">
            <summary>
            Creates the Laptop shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateAllInOnePC">
            <summary>
            Creates the All In One PC shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateKeyboard">
            <summary>
            Creates the Keyboard shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateMouse">
            <summary>
            Creates the Mouse shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateScrollwheelMouse">
            <summary>
            Creates the Scrollwheel Mouse shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreatePrinter">
            <summary>
            Creates the printer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateScanner">
            <summary>
            Creates the scanner shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateCopier">
            <summary>
            Creates the copier shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateProjector">
            <summary>
            Creates the projector shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreatePhone">
            <summary>
            Creates the phone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFloorPlanShapesFactory.CreateFax">
            <summary>
            Creates the fax shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NFlowChartingShapesFactory">
            <summary>
            The NFlowChartingShapesFactory class is used to produce flowcharting shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index, 
            using its default bounds (if it a 2D shape) or its default start and end points (if it is a 1D shape)
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined flowcharing shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateShape(Nevron.Diagram.Shapes.FlowChartingShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="flowChartingShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.GetEnumType">
            <summary>
            Overriden to return the FlowChartingShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Overriden to create the shape info for the flow charting shape at the specified index
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateProcess">
            <summary>
            Creates the process shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateDecision">
            <summary>
            Creates the decision shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateDocument">
            <summary>
            Creates the document shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreatePredefinedDocument">
            <summary>
            Creates the predefined document shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateMultiDocument">
            <summary>
            Creates the multi document shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateData">
            <summary>
            Creates the data shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreatePredefinedProcess">
            <summary>
            Creates the predefined process shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateStoredData">
            <summary>
            Creates the stored data shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateInternalStorage">
            <summary>
            Creates the internal storage shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateSequencialData">
            <summary>
            Creates the sequencial data shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateDirectData">
            <summary>
            Creates the direct data shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateManualInput">
            <summary>
            Creates the manual input shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateManualOperation">
            <summary>
            Creates the manual operation shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateCard">
            <summary>
            Creates the card shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreatePaperTape">
            <summary>
            Creates the paper tape shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateDisplay">
            <summary>
            Creates the display shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreatePreparation">
            <summary>
            Creates the preparation shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateLoopLimit">
            <summary>
            Creates the loop limit shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateTermination">
            <summary>
            Creates the termination shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateCollate">
            <summary>
            Creates the collate shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateDelay">
            <summary>
            Creates the delay shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateExtract">
            <summary>
            Creates the extract shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateMerge">
            <summary>
            Creates the merge shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateOr">
            <summary>
            Creates the or shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateSort">
            <summary>
            Creates the sort shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateSummingJunction">
            <summary>
            Creates the summing junction shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateDatabase">
            <summary>
            Creates the database shapes
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateOnPageReference">
            <summary>
            Creates the on page reference shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateOffPageReference">
            <summary>
            Creates the off page reference shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateProcessIso9000">
            <summary>
            Creates the process Iso9000 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFlowChartingShapesFactory.CreateTransport">
            <summary>
            Creates the transport Iso9000 shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NFoodShapesFactory">
            <summary>
            The NFoodShapesFactory class is used to produce network shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NFoodShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined food shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateShape(Nevron.Diagram.Shapes.FoodShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="foodShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.GetEnumType">
            <summary>
            Overriden to return the FoodShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateBurger">
            <summary>
            Creates the Burger shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateIceCone">
            <summary>
            Creates the Ice Cream shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateIceStick">
            <summary>
            Creates the Ice Stick shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateCup">
            <summary>
            Creates the Cup shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateMug">
            <summary>
            Creates the Mug shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreatePizza">
            <summary>
            Creates the Pizza shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreatePizzaSlice">
            <summary>
            Creates the Pizza Slice shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateFries">
            <summary>
            Creates the Fries shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateSoftDrink">
            <summary>
            Creates the Soft Drink shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateMartiniGlass">
            <summary>
            Creates the Martini Glass shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateFork">
            <summary>
            Creates the Fork shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateKnife">
            <summary>
            Creates the Knife shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateSpoon">
            <summary>
            Creates the Spoon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateTallDrink">
            <summary>
            Creates the Tall Drink shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateStrongDrink">
            <summary>
            Creates the Strong Drink shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateShotglass">
            <summary>
            Creates the Shotglass shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateTallShotglass">
            <summary>
            Creates the Tall Shotglass shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateHotDog">
            <summary>
            Creates the Hot Dog shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateMuffin">
            <summary>
            Creates the Muffin shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateCake">
            <summary>
            Creates the Cake shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateSushi">
            <summary>
            Creates the Sushi shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateCroissant">
            <summary>
            Creates the Croissant shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateStrawberry">
            <summary>
            Creates the Strawberry shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateApple">
            <summary>
            Creates the Apple shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreatePear">
            <summary>
            Creates the Pear shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreatePineapple">
            <summary>
            Creates the Pineapple shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateBanana">
            <summary>
            Creates the Banana shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateCherries">
            <summary>
            Creates the Cherries shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateTomato">
            <summary>
            Creates the Tomato shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateEggplant">
            <summary>
            Creates the Eggplant shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateBellPepper">
            <summary>
            Creates the BellPepper shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateCarrot">
            <summary>
            Creates the Carrot shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateChiliPepper">
            <summary>
            Creates the Chili Pepper shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NFoodShapesFactory.CreateMushroom(Nevron.Diagram.NCompositeShape,Nevron.Diagram.NCustomPath@)">
            <summary>
            Sun Common Shape
            </summary>
            <param name="shape"></param>
            <param name="mushroom_Path"></param>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NGenericNGon">
            <summary>
            The NGenericNGon class is used to generate the vertices of a generic N-gon shape
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NGenericNGon.#ctor(System.Int32,System.Single,System.Single,Nevron.GraphicsCore.NPointF)">
            <summary>
            Initializer constructor
            </summary>
            <param name="vertexCount"></param>
            <param name="startAngle"></param>
            <param name="radius"></param>
            <param name="center"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NGenericNGon.CreateVertices">
            <summary>
            Creates the N-gon vertices 
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGon.VertexCount">
            <summary>
            Count of vertices
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGon.StartAngle">
            <summary>
            Start angle (in radians)
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGon.Radius">
            <summary>
            Radius
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGon.Center">
            <summary>
            N-gon center
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NGenericNGram">
            <summary>
            The NGenericNGram class is used to generate the vertices of a generic N-gram shape
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NGenericNGram.#ctor(System.Int32,System.Single,System.Single,System.Single,Nevron.GraphicsCore.NPointF)">
            <summary>
            Initializer constructor
            </summary>
            <param name="vertexCount"></param>
            <param name="startAngle"></param>
            <param name="outerRadius"></param>
            <param name="innerRadius"></param>
            <param name="center"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NGenericNGram.CreateVertices">
            <summary>
            Creates the N-gram vertices
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NGenericNGram.CreateInnerVertices">
            <summary>
            Creates the N-gram inner vertices
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NGenericNGram.CreateOuterVertices">
            <summary>
            Creates the N-gram outer vertices
            </summary>
            <returns></returns>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGram.VertexCount">
            <summary>
            Count of vertices
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGram.StartAngle">
            <summary>
            Start angle (in radians)
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGram.OuterRadius">
            <summary>
            Outer Radius
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGram.InnerRadius">
            <summary>
            Inner radius
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NGenericNGram.Center">
            <summary>
            N-gram center
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NNetworkShapesFactory">
            <summary>
            The NNetworkShapesFactory class is used to produce network shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NNetworkShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined network shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateShape(Nevron.Diagram.Shapes.NetworkShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="networkShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.GetEnumType">
            <summary>
            Overriden to return the NetworkShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateComputer">
            <summary>
            Creates the computer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateServer">
            <summary>
            Creates the server shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreatePrinter">
            <summary>
            Creates the printer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateLaptop">
            <summary>
            Creates the laptop/notebook computer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreatePDA">
            <summary>
            Creates the PDA shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreatePhone">
            <summary>
            Creates the telephone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateStorage">
            <summary>
            Creates the (mass) storage shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateHub">
            <summary>
            Creates the hub/switch/router shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateWiFi">
            <summary>
            Creates the wifi access point/hub/router shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateTerminal">
            <summary>
            Creates the terminal (limited access computer) shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateCell">
            <summary>
            Creates the cell phone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateScanner">
            <summary>
            Creates the scanner shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateFax">
            <summary>
            Creates the fax shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateCopier">
            <summary>
            Creates the copier shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateFirewall">
            <summary>
            Creates the firewall shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateProjector">
            <summary>
            Creates the data projector shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateDigicam">
            <summary>
            Creates the (point-and-shoot) digital still camera shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateDSLR">
            <summary>
            Creates the (professional-grade) digital single-lens reflex camera shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateWebcam">
            <summary>
            Creates the webcamera shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateDVCam">
            <summary>
            Creates the digital video camera shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateTabletPC">
            <summary>
            Creates the tablet PC shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateUPPC">
            <summary>
            Creates the ultra-portable PC shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateMFC">
            <summary>
            Creates the multifunctional (all-in-one-office) device shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateSmartPhone">
            <summary>
            Creates the smart-phone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreatePMC">
            <summary>
            Creates the portable/personal media center shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateModem">
            <summary>
            Creates the modem shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateExternalDrive">
            <summary>
            Creates the external (CD/DVD/FDD/HDD/etc.) drive shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateMP3">
            <summary>
            Creates the (portable) MP3-player shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateMonitorFill">
            <summary>
            Creates a fill style for moninors
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NNetworkShapesFactory.CreateButtonFill">
            <summary>
            Creates a fill style for buttons
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NShapeInfo">
            <summary>
            The NShapeInfo class is used to encapsulate the additional information about a shape, 
            which can be created by a shape factory.
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapeInfo.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapeInfo.Name">
            <summary>
            Gets/sets the shape name (also used as master name)
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapeInfo.Prompt">
            <summary>
            Gets/sets the shape prompt (used when the shape is wrapped in a master)
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapeInfo.ShapeType">
            <summary>
            Gets/sets the shape type
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapeInfo.UsesDefaultSize">
            <summary>
            Gets/sets whether the shape uses the default size of the factory
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapeInfo.PreserveAspectRatio">
            <summary>
            Gets/sets whether the original aspect ratio of the shape must be preserved, 
            when the shape is scaled to fit the default factory size (valid only if the UsesDefaultSize property is true)
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NShapesFactory">
            <summary>
            The NShapesFactory class, servers as base class for all shape factories 
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.#ctor(System.String,Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="name"></param>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.#ctor(System.String,Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="name"></param>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.ConvertMeasurementUnit(Nevron.GraphicsCore.NMeasurementUnitConverter,Nevron.GraphicsCore.NMeasurementUnit,Nevron.GraphicsCore.NMeasurementUnit)">
            <summary>
            Called when the measurement unit of the measurements stored in this factory
            have changed and all measurements must be converted to the new unit
            </summary>
            <param name="converter">measurement unit converter to use</param>
            <param name="from">from measurement unit</param>
            <param name="to">to measurement unit</param>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapesFactory.MeasurementUnit">
            <summary>
            Gets/sets the measurement unit of the factory
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapesFactory.Resolution">
            <summary>
            Gets/sets the resolution used for convertion between device dependant and device independant measurement units
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CanCreateShape(System.String)">
            <summary>
            Creates a new instance of the shape with the specified name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateShape(System.String)">
            <summary>
            Determines whether this shape factory can create a shape with the specified name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateLibrary">
            <summary>
            Creates a new library document, which contians a master for each shape which the factory can produce
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.GetShapeInfo(System.Int32)">
            <summary>
            Obtains information about the shape at the specified index
            </summary>
            <param name="index">index of the shape</param>
            <returns>shape info</returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapesFactory.ShapesCount">
            <summary>
            Obtains the count of shapes, which this factory can produce
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapesFactory.DefaultSize">
            <summary>
            Gets/sets the default shapes size
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapesFactory.OriginalMeasurementUnit">
            <summary>
            Gets the measurement unit in which the shapes are originally defined
            </summary>
            <remarks>
            This implementation returns Pixel
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapesFactory.Name">
            <summary>
            Gets/sets the name of this shape factory
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NShapesFactory.ShapeInfoCashe">
            <summary>
            Gets the hashtable, which is used to cashe the generated shape infos 
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.GetEnumType">
            <summary>
            Must override to return the shapes enumeration type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.GetModelBounds(System.Int32)">
            <summary>
            Gets the modeling bounds for a shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.OnShapeCreated(System.Int32,Nevron.Diagram.NShape)">
            <summary>
            Called when the shape at the specified index has been created
            </summary>
            <param name="index"></param>
            <param name="shape"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateCenterPort(Nevron.Diagram.NShape,Nevron.Diagram.NContentAlignment,System.Guid)">
            <summary>
            Creates a dynamic center port for the specified shape, anchored to the sub model with the specified UId
            </summary>
            <param name="shape">shape</param>
            <param name="alignment">alignment of the port relative to the anchor model</param>
            <param name="anchorUId">anchor model unique id</param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateCenterPort(Nevron.Diagram.NShape)">
            <summary>
            Creates a 
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateSidesPorts(Nevron.Diagram.NShape)">
            <summary>
            Creates sides ports for the specifies shape
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateVerticesPorts(Nevron.Diagram.NShape,Nevron.GraphicsCore.NPointF[])">
            <summary>
            Creates ports for the specifies shape vertices
            </summary>
            <param name="shape"></param>
            <param name="vertices"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateCenterAndSidesPorts(Nevron.Diagram.NShape,System.Guid)">
            <summary>
            Creates center and sides ports for the specified shape. 
            The center port is anchored to the middle center of the sub model width the specified anchor UId
            </summary>
            <param name="shape"></param>
            <param name="anchorUId"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateCenterAndSidesPorts(Nevron.Diagram.NShape)">
            <summary>
            Creates center and sides ports for the specified shape
            </summary>
            <param name="shape">shape</param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateCenterAndVerticesPorts(Nevron.Diagram.NShape,Nevron.GraphicsCore.NPointF[])">
            <summary>
            Creates center and and vertices ports
            </summary>
            <param name="shape">shape</param>
            <param name="vertices">vertices for which to generate ports</param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NShapesFactory.CreateCenterAndVerticesPorts(Nevron.Diagram.NShape,Nevron.GraphicsCore.NPointF,Nevron.GraphicsCore.NPointF[])">
            <summary>
            Creates center and and vertices ports
            </summary>
            <param name="shape">shape</param>
            <param name="center">shape center point</param> 
            <param name="vertices">vertices for which to generate ports</param>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory">
            <summary>
            The NSimpleNetworkShapesFactory class is used to produce simpleNetwork shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined simpleNetwork shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateShape(Nevron.Diagram.Shapes.SimpleNetworkShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="simpleNetworkShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.GetEnumType">
            <summary>
            Overriden to return the SimpleNetworkShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateComputer">
            <summary>
            Creates the simple computer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateServer">
            <summary>
            Creates the simple server shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreatePrinter">
            <summary>
            Creates the simple printer shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateLaptop">
            <summary>
            Creates the simple laptop shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreatePDA">
            <summary>
            Creates the simple PDA shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreatePhone">
            <summary>
            Creates the simple phone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateFax">
            <summary>
            Creates the simple fax shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateCell">
            <summary>
            Creates the simple cell phone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateCam">
            <summary>
            Creates the simple digital camera shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateWebcam">
            <summary>
            Creates the simple webcam shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateProjector">
            <summary>
            Creates the simple data projector shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateTablet">
            <summary>
            Creates the simple tablet pc shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateDigicam">
            <summary>
            Creates the simple digital webcamera shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateWifi">
            <summary>
            Create simple wireless ap/router shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateScanner">
            <summary>
            Creates the simple scanner shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateCopier">
            <summary>
            Creates the simple copier shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateMfc">
            <summary>
            Creates the simple multifunctional device (MFD/MFC) shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreatePmc">
            <summary>
            Creates the simple personal media center (PMC) shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateMp3">
            <summary>
            Creates the simple MP3 player shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateModem">
            <summary>
            Creates the simple modem shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateHub">
            <summary>
            Creates the simple hub/switch/router shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateUppc">
            <summary>
            Creates the simple UPPC (ultra-portable pc) shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateExternalDrive">
            <summary>
            Creates the simple external drive shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateMonitorFill">
            <summary>
            Creates a fill style for moninors
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSimpleNetworkShapesFactory.CreateButtonFill">
            <summary>
            Creates a fill style for buttons
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NSymbolShapesFactory">
            <summary>
            The NSymbolShapesFactory class is used to produce symbol shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NSymbolShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined symbol shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateShape(Nevron.Diagram.Shapes.SymbolShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="symbolShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.GetEnumType">
            <summary>
            Overriden to return the SymbolShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateSkull">
            <summary>
            Creates the skull shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateRadioactive">
            <summary>
            Creates the radioactive shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateRecycle">
            <summary>
            Creates the recycle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateMan">
            <summary>
            Creates the man shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateWoman">
            <summary>
            Creates the woman shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateHandicapped">
            <summary>
            Creates the handicapped shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateYinYang">
            <summary>
            Creates the yin-yang shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateHeart">
            <summary>
            Creates the heart shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateFlower">
            <summary>
            Creates the flower shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateApple">
            <summary>
            Creates the apple shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateBowtie">
            <summary>
            Creates the bowtie shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateMale">
            <summary>
            Creates the male symbol shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateFemale">
            <summary>
            Creates the female symbol
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateBook">
            <summary>
            Creates the book shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateStickFigure">
            <summary>
            Creates the stick figure shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateSun">
            <summary>
            Creates the sun shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateMoon">
            <summary>
            Creates the moon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateOrb">
            <summary>
            Creates the orb shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateSimpleOrb">
            <summary>
            Creates the SimpleOrb shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreatePillButton">
            <summary>
            Creates the pill button shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateMainButton">
            <summary>
            Creates the main button shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateGlossyButton">
            <summary>
            Creates the glossy button shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateAquaPill">
            <summary>
            Creates the aqua pill shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateHumanIcon">
            <summary>
            Creates the human icon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateHumanIcon2">
            <summary>
            Creates the Human Icon 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateHumanIcon3">
            <summary>
            Creates the Human Icon 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateHumanIcon4">
            <summary>
            Creates the Human Icon 4 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateMaleFigure">
            <summary>
            Creates the Male Figure shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateFemaleFigure">
            <summary>
            Creates the Female Figure shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateFlatFigure">
            <summary>
            Creates the Flat Figure shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateNewActor">
            <summary>
            Creates the New Actor shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateNewActor2">
            <summary>
            Creates the New Actor 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateNewActor3">
            <summary>
            Creates the New Actor 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateNewActor4">
            <summary>
            Creates the New Actor 4 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateBubbleFigure">
            <summary>
            Creates the Bubble Figure shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateRoleIcon">
            <summary>
            Creates the Role Icon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateRoleIcon2">
            <summary>
            Creates the Role Icon 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUserIcon">
            <summary>
            Creates the User Icon shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers1">
            <summary>
            Creates the Users 1 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers2">
            <summary>
            Creates the Users 2 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers3">
            <summary>
            Creates the Users 3 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers4">
            <summary>
            Creates the Users 4 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers5">
            <summary>
            Creates the Users 5 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers6">
            <summary>
            Creates the Users 6 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers7">
            <summary>
            Creates the Users 7 shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NSymbolShapesFactory.CreateUsers8">
            <summary>
            Creates the Users 8 shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory">
            <summary>
            The NTrafficSignsShapesFactory class is used to produce traffic sign shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined traffic signs shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateShape(Nevron.Diagram.Shapes.TrafficSignsShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="trafficSignsShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.GetEnumType">
            <summary>
            Overriden to return the TrafficSignsShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoTraffic">
            <summary>
            Creates the no traffic sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoEntry">
            <summary>
            Creates the no entry sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoParking">
            <summary>
            Creates the no parking sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoParkingStop">
            <summary>
            Creates the no parking and/or stopping sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateSpeedLimit">
            <summary>
            Creates the speed limit sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoLeftTurn">
            <summary>
            Creates the no left turn sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoRightTurn">
            <summary>
            Creates the no right turn sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateKeepDirection">
            <summary>
            Creates the keep direction sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateGiveWay">
            <summary>
            Creates the yield/give way sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateHighway">
            <summary>
            Creates the highway sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateDeadEnd">
            <summary>
            Creates the dead end sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateOneWay">
            <summary>
            Creates the one way sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateRailCrossing">
            <summary>
            Creates the rail crossing sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateParkingSign">
            <summary>
            Creates the parking sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateParkingTimeSign">
            <summary>
            Creates the parking with timer sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateStopSign">
            <summary>
            Creates the stop sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateEURouteSign">
            <summary>
            Creates the European route number sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateIntersectionSign">
            <summary>
            Creates the intersection sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateTrafficLightAhead">
            <summary>
            Creates the traffic light ahead sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateRoadNarrowsOne">
            <summary>
            Creates the one-sided road narrows sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateRoadNarrows">
            <summary>
            Creates the road narrows sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUnevenRoad">
            <summary>
            Creates the uneven road sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateDoubleCurve">
            <summary>
            Creates the double curve/curvy road sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateAttentionSign">
            <summary>
            Creates the attention sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateHeightLimit">
            <summary>
            Creates the height limit sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoUTurn">
            <summary>
            Creates the no U-turn sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateRecommended">
            <summary>
            Creates the recommended (speed) sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateAttentionPeds">
            <summary>
            Creates the attention pedestrians sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateAttentionRoundway">
            <summary>
            Creates the roundway sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateTurnAhead">
            <summary>
            Creates the turn ahead sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoOvertake">
            <summary>
            Creates the no overtake sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateNoTruckOvertake">
            <summary>
            Creates the no overtake for trucks sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateCautionSlippery">
            <summary>
            Creates the slippery road sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateEndLimits">
            <summary>
            Creates the end of limits sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateSteepHill">
            <summary>
            Creates the steep hill sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateTunnel">
            <summary>
            Creates the tunnel sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateFallingRocks">
            <summary>
            Creates the falling rocks sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateAvion">
            <summary>
            Creates the low flying aircraft sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateTwoWayTraffic">
            <summary>
            Creates the two way traffic sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateRiverBank">
            <summary>
            Creates the quayside/riverbank sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateWindSign">
            <summary>
            Creates the high winds sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateRightWay">
            <summary>
            Creates the right-of-way sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateEndRightWay">
            <summary>
            Creates the end right-of-way sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateRoadWork">
            <summary>
            Creates the roadworks sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSCaution">
            <summary>
            Creates the US caution sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSInterstate">
            <summary>
            Creates the US interstate road sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSRoad">
            <summary>
            Creates the US road/route number sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSSpeedLimit">
            <summary>
            Creates the US speed limit sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSTrafficLight">
            <summary>
            Creates the US traffic light ahead sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSTwoWayTraffic">
            <summary>
            Creates the US two way traffic sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSRoadWork">
            <summary>
            Creates the US roadworks sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSSlipperyRoad">
            <summary>
            Creates the US slippery road sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSPedestrian">
            <summary>
            Creates the US pedestrian sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTrafficSignsShapesFactory.CreateUSFallingRocks">
            <summary>
            Creates the US falling rocks sign shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NTravelShapesFactory">
            <summary>
            The NTravelShapesFactory class is used to produce network shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NTravelShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined network shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateShape(Nevron.Diagram.Shapes.TravelShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="travelShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.GetEnumType">
            <summary>
            Overriden to return the TravelShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreatePhone">
            <summary>
            Creates the Phone shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateMail">
            <summary>
            Creates the Mail/Post shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateCurrencyExchange">
            <summary>
            Creates the Currency Exchange shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateMedicalOffice">
            <summary>
            Creates the Medical Office shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateLockers">
            <summary>
            Creates the Lockers shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBaggageClaim">
            <summary>
            Creates the Baggage Claim shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateRentACar">
            <summary>
            Creates the Car Pickup shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateTaxi">
            <summary>
            Creates the Taxi shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBus">
            <summary>
            Creates the Bus shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBaggageCarts">
            <summary>
            Creates the Baggage Carts shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateEscalator">
            <summary>
            Creates the Escalator shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateCamping">
            <summary>
            Creates the Camping shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateElevator">
            <summary>
            Creates the Elevator shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateTramSubway">
            <summary>
            Creates the Train shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateCafe">
            <summary>
            Creates the Cafe shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateSmokingArea">
            <summary>
            Creates the Smoking Area shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateNoSmoking">
            <summary>
            Creates the No Smoking shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBar">
            <summary>
            Creates the Bar shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateAirport">
            <summary>
            Creates the Airport shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateRestaurant">
            <summary>
            Creates the Restaurant shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateGas">
            <summary>
            Creates the Gas shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateHotel">
            <summary>
            Creates the Hotel shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateShowers">
            <summary>
            Creates the Showers shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateWater">
            <summary>
            Creates the Water shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateDirection">
            <summary>
            Creates the Direction shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateRestArea">
            <summary>
            Creates the Rest Area shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateArrow">
            <summary>
            Creates the Arrow shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBarberShop">
            <summary>
            Creates the Barber Shop shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateMeetingPoint">
            <summary>
            Creates the Meeting Point shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateWardrobe">
            <summary>
            Creates the Wardrobe shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateFasten">
            <summary>
            Creates the Buckle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateDepartures">
            <summary>
            Creates the Departures shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateArrivals">
            <summary>
            Creates the Arrivals shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateHydrant">
            <summary>
            Creates the Fire Hydrant shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateShopping">
            <summary>
            Creates the Shopping shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateTrains">
            <summary>
            Creates the Trains shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBicycle">
            <summary>
            Creates the Bicycle shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreatePicnic">
            <summary>
            Creates the Picnic shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateTheatre">
            <summary>
            Creates the Theatre shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateMarina">
            <summary>
            Creates the Marina shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateIceCreamStall">
            <summary>
            Creates the Ice Cream shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateSnackfoodStall">
            <summary>
            Creates the Snackfood Stall shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBabyChangingRoom">
            <summary>
            Creates the Baby Changing Room shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateLadiesRoom">
            <summary>
            Creates the Ladies' Room shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateMensRoom">
            <summary>
            Creates the Men's Room shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateShaversOnly">
            <summary>
            Creates the Shavers Only shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateMuseum">
            <summary>
            Creates the Museum shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateNoLittering">
            <summary>
            Creates the No Littering shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateGifts">
            <summary>
            Creates the Gifts shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateShip">
            <summary>
            Creates the Ship shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateSeating">
            <summary>
            Creates the Seating shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreatePassportCheck">
            <summary>
            Creates the Passport Check shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateBaggageCheck">
            <summary>
            Creates the Baggage Check shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NTravelShapesFactory.CreateAirConditioning">
            <summary>
            Creates the Air Conditioning shape
            </summary>
            <returns></returns>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NWeatherShapesFactory">
            <summary>
            The NWeatherShapesFactory class is used to produce network shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.#ctor(Nevron.GraphicsCore.NMeasurementUnit,System.Single)">
            <summary>
            Initializer constructor
            </summary>
            <param name="unit"></param>
            <param name="resolution"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateShape(System.Int32)">
            <summary>
            Creates a new instance of the shape at the specified index 
            </summary>
            <param name="index">shape index</param>
            <returns>new shape instance</returns>
        </member>
        <member name="P:Nevron.Diagram.Shapes.NWeatherShapesFactory.ShapesCount">
            <summary>
            Overriden to return the count of the predefined network shapes
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateShape(Nevron.Diagram.Shapes.WeatherShapes)">
            <summary>
            Creates the specified shape
            </summary>
            <param name="weatherShape"></param>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.GetEnumType">
            <summary>
            Overriden to return the WeatherShapes type
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateShapeInfo(System.Int32)">
            <summary>
            Creates the shape info for the shape at the specified index
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateSunny">
            <summary>
            Creates the Sunny shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateClearNight">
            <summary>
            Creates the Clear Night shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateSunnyHot">
            <summary>
            Creates the Sunny Hot shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateCloudy">
            <summary>
            Creates the Cloudy shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateMostlyCloudy">
            <summary>
            Creates the Partly Cloudy shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateMostlyCloudyNight">
            <summary>
            Creates the Mostly Cloudy Night shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreatePartlyCloudy">
            <summary>
            Creates the Mostly Cloudy shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreatePartlyCloudyNight">
            <summary>
            Creates the Partly Cloudy Night shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateRainy">
            <summary>
            Creates the Rainy shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateDownfall">
            <summary>
            Creates the Downfall shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateMixedRainSnow">
            <summary>
            Mixed Snow Rain
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateSnow">
            <summary>
            Creates the Snow shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateBlizzard">
            <summary>
            Creates the Blizzard shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateFoggy">
            <summary>
            Creates the Foggy shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateCloudyFoggy">
            <summary>
            Creates the CloudyFoggy shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateStorm">
            <summary>
            Creates the Storm shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateTStorm">
            <summary>
            Creates the T-Storm shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateHaze">
            <summary>
            Creates the Haze shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateNightHaze">
            <summary>
            Creates the Night Haze shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateTornado">
            <summary>
            Creates the Tornado shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateWindy">
            <summary>
            Creates the Windy shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateHurricane">
            <summary>
            Creates the Hurricane shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateWeatherVane">
            <summary>
            Creates the Weather Vane shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateUmbrella">
            <summary>
            Creates the Umbrella shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateSingleDrop">
            <summary>
            Creates the Raindrop shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateSingleFlake">
            <summary>
            Creates the Snowflake shape
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateSun(Nevron.Diagram.NCompositeShape,Nevron.Diagram.NCustomPath@,Nevron.Diagram.NEllipsePath@)">
            <summary>
            Sun Common Shape
            </summary>
            <param name="shape"></param>
            <param name="sun_RaysPath"></param>
            <param name="sun_Face"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateMoon(Nevron.Diagram.NCompositeShape,Nevron.Diagram.NCustomPath@,Nevron.Diagram.NCustomPath@)">
            <summary>
            Sun Common Shape
            </summary>
            <param name="shape"></param>
            <param name="moon_CrescentPath"></param>
            <param name="moon_BodyPath"></param>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateCloud(Nevron.Diagram.NCompositeShape,Nevron.Diagram.NCustomPath@,Nevron.Diagram.NCustomPath@)">
            <summary>
            Cloud Common Shape
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateDrop(Nevron.Diagram.NCompositeShape,Nevron.Diagram.NCustomPath@,Nevron.Diagram.NCustomPath@)">
            <summary>
            Drop Common Shape
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateSnowflake(Nevron.Diagram.NCompositeShape,Nevron.Diagram.NPolygonPath@)">
            <summary>
            Snowflake Common Shape
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateTorrent(Nevron.Diagram.NCompositeShape)">
            <summary>
            Torrent Common Shape
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateFog(Nevron.Diagram.NCompositeShape)">
            <summary>
            Fog Common Shape
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NWeatherShapesFactory.CreateLightning(Nevron.Diagram.NCompositeShape,Nevron.Diagram.NPolygonPath@)">
            <summary>
            Lightning Common Shape
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Shapes.NDSR">
            <summary>
            Namespace class for resources used by the Nevron.Diagram.Shapes assembly
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Shapes.NDSR.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameFlowChartingShapesFactory">
            <summary>
            Name for the FlowCharting Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameBasicShapesFactory">
            <summary>
            Name for the Basic Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameSymbolShapesFactory">
            <summary>
            Name for the Symbol Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameTrafficSignsShapesFactory">
            <summary>
            Name for the Traffic Signs Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameNetworkShapesFactory">
            <summary>
            Name for the Network Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameBrainstormingShapesFactory">
            <summary>
            Name for the Brainstorming Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameMapShapesFactory">
            <summary>
            Name for the Map Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameElectricalSymbolsShapesFactory">
            <summary>
            Name for the Electrical Symbols Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameSimpleNetworkShapesFactory">
            <summary>
            Name for the Simple Network Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameFloorPlanShapesFactory">
            <summary>
            Name for the Floor Plan Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameFlagsShapesFactory">
            <summary>
            Name for the Flags Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameTravelShapesFactory">
            <summary>
            Name for the Travel Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameWeatherShapesFactory">
            <summary>
            Name for the Weather Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameFoodShapesFactory">
            <summary>
            Name for the Food Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameCauseAndEffectShapesFactory">
            <summary>
            Name for the Cause and Effect Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameFilesAndFoldersFactory">
            <summary>
            Name for the Files and Folders Shapes Factory
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Shapes.NDSR.NameBusinessProcessShapesFactory">
            <summary>
            Name for the Business Process Shapes Factory
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Editors.NTemplateUC">
            <summary>
            The NTemplateUC represents a user control which is used for the visual template editing
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Editors.NTemplateUC.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Editors.NTemplateUC.#ctor(Nevron.Diagram.Templates.NTemplate)">
            <summary>
            Creates a new user control associated with the specified template
            </summary>
            <param name="template">template associated with the user control</param> 
        </member>
        <member name="P:Nevron.Diagram.Editors.NTemplateUC.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Editors.NTemplateUC.Template">
            <summary>
            Gets/sets the template associated with the user control
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Editors.NTemplateUC.Caption">
            <summary>
            Gets/sets the user control caption which is displayed in the wizard tab strip
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Editors.NTemplateUC.UpdateFromTemplate">
            <summary>
            Updates the user control from the template
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Editors.NTemplateUC.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Editors.NTemplateUC.OnLoad(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Nevron.Diagram.Templates.TreeLayoutScheme">
            <summary>
            Enumerates the predefined tree layout schemes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.TreeLayoutScheme.None">
            <summary>
            Do not use schemes
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.TreeLayoutScheme.Layered">
            <summary>
            Layered tree layout
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.TreeLayoutScheme.LayeredLeftAligned">
            <summary>
            Layered tree layout with layers aligned to the left
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.TreeLayoutScheme.LayeredRightAligned">
            <summary>
            Layered tree layout with layers aligned to the right
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Templates.NDiagramTemplatesLoadAssemblyType">
            <summary>
            Used to explicitly load the Nevron.Diagram.Templates.dll assembly.
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NDiagramTemplatesLoadAssemblyType.#ctor">
            <summary>
            Default constructor	
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Templates.NGraphTemplate">
            <summary>
            The NGraphTemplate class is a template, which serves as base class for all templates which create graph
            </summary>
            <remarks>
            It enhances its base with the following features:
            <list type="bullet">
            <item>
            	<term>Vertex style and Edge style attributes</term>
            	<description>Exposed by the VerticesStyle and EdgesStyle properties
            	</description>
            </item>
            <item>
            	<term>Control over the vertices shape and size</term>
            	<description>Exposed by the VerticesSize and VerticesShape properties
            	</description>
            </item>
            <item>
            	<term>Generic spacing control</term>
            	<description>Exposed by the HorizontalSpacing and VerticalSpacing properties
            	</description>
            </item>
            <item>
            	<term>Ability to create new vertices and edges which conform to the template settings</term>
            	<description>
            	Achieved with the help of the CreateLineGraphEdge and CreateGraphVertex methods.
            	</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGraphTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGraphTemplate.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="name">template name</param>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.Attributes">
            <summary>
            Gets an array of the child attributes of this container
            </summary>
            <remarks>
            Overriden to return the vertices and edges styles
            </remarks>
            <returns>attributes of the container</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGraphTemplate.GetAttributeName(Nevron.Dom.INAttribute)">
            <summary>
            Gets the name of the specified child attribute
            </summary>
            <remarks>
            Overriden to give names to the vertices and edges styles
            </remarks>
            <param name="attribute">child attribute</param>
            <returns>name of the attribute</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGraphTemplate.ConvertMeasurementUnit(Nevron.GraphicsCore.NMeasurementUnitConverter,Nevron.GraphicsCore.NMeasurementUnit,Nevron.GraphicsCore.NMeasurementUnit)">
            <summary>
            Called when the measurement unit of the measurements stored in this node 
            have changed and all measurements must be converted to the new unit
            </summary>
            <param name="converter">measurement unit converter to use</param>
            <param name="from">from measurement unit</param>
            <param name="to">to measurement unit</param>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.VerticesSize">
            <summary>
            Gets/sets the size of the vertices constructed by this template
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.VerticesShape">
            <summary>
            Gets/sets the shape of the vertices constructed by this template
            </summary>
            <remarks>
            By default set to Rectangle
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.HorizontalSpacing">
            <summary>
            Gets/sets the horizontal spacing between vertices
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.VerticalSpacing">
            <summary>
            Gets/sets the vertical spacing between vertices
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.VerticesStyle">
            <summary>
            Specifies the default style applied to vertices
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.EdgesStyle">
            <summary>
            Specifies the default style applied to edges
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.VerticesStyleSheetName">
            <summary>
            Specifies the default stylesheet name of the vertices
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGraphTemplate.EdgesStyleSheetName">
            <summary>
            Specifies the default stylesheet name of the edges
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGraphTemplate.CreateEdge(Nevron.Diagram.ConnectorType)">
            <summary>
            Creates a new connector from the specified type
            </summary>
            <remarks>
            The new connector style uses a copy of EdgesStyle style
            </remarks>
            <param name="type"></param>
            <returns>new connector</returns> 
        </member>
        <member name="M:Nevron.Diagram.Templates.NGraphTemplate.CreateVertex(Nevron.Diagram.Shapes.BasicShapes)">
            <summary>
            Creates a new graph vertex with the specified predefined shape
            </summary>
            <remarks>
            The new graph vertex style is a copy of the VerticesStyle style
            </remarks>
            <param name="shape">predefined shape</param>
            <returns>new graph vertex</returns>
        </member>
        <member name="T:Nevron.Diagram.Templates.NTemplate">
            <summary>
            The NTemplate abstract class serves as base class for all programmable templates
            </summary>
            <remarks>
            The NTemplate class adds support for the following feautres:
            <list type="bullet">
            <item>
            	<term>Attributes</term>
            	<description>
            	NTemplate adds core support for attribites (hence implements the INAttributeContainer interface). 
            	NTemplate itself does not expose any attributes though - it is up to derived classes to do that 
            	</description>
            </item>
            <item>
            	<term>Measurement Unit</term>
            	<description>
            	The measurements of the template are defined in the template measurement unit, hence 
            	the NTemplate class implements the INMeasurementUnit and INMeasurements interfaces. 
            	It also implements the INResolution interface.
            	</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.#ctor(System.String)">
            <summary>
            Initializer contructor
            </summary>
            <param name="name">name of the template</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.Clone">
            <summary>
            Creates an identical copy of this object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.UpdateReferences(Nevron.INReferenceProvider)">
            <summary>
            
            </summary>
            <param name="provider"></param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.CreateNonSerializedObjects">
            <summary>
            
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.GetReferenceProvider">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.ProvideReference(System.Type)">
            <summary>
            
            </summary>
            <param name="parentType"></param>
            <returns></returns>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplate.Attributes">
            <summary>
            Gets the list of child attributes of this container
            </summary>
            <returns>attributes of the container</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.GetAttributeName(Nevron.Dom.INAttribute)">
            <summary>
            Gets the name of the specified child attribute
            </summary>
            <param name="attribute">child attribute</param>
            <returns>name of the attribute</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.GetAttributeByName(System.String)">
            <summary>
            Gets a child or descendant attribute by its name
            </summary>
            <param name="attributeName">child name or full attribute name</param>
            <returns>a reference to the attribute</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.SetAttributeByName(System.String,Nevron.Dom.INAttribute)">
            <summary>
            Sets a child or descendant attribute by its name
            </summary>
            <param name="attributeName">attribute name</param>
            <param name="attribute">attribute to set</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.OnAttributePropertyChanging(System.String,System.String,System.Object)">
            <summary>
            Called by child or descendants attributes when an attribute property is changing
            </summary>
            <param name="attributeFullName">full attribute name</param>
            <param name="attributeProperty">attribute property</param>
            <param name="newValue">new property value</param>
            <returns>true if the change is acceptable, otherwise false</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.OnAttributePropertyChanged(System.String,System.String)">
            <summary>
            Called by child or descendants attributes when an attribute property has changed
            </summary>
            <param name="attributeFullName">full attribute name</param>
            <param name="attributeProperty">attribute property</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.OnAttributeChanged(System.String)">
            <summary>
            Called by child or descendants attributes when an attribute has changed
            </summary>
            <param name="attributeFullName">full attribute name</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.ConvertMeasurementUnit(Nevron.GraphicsCore.NMeasurementUnitConverter,Nevron.GraphicsCore.NMeasurementUnit,Nevron.GraphicsCore.NMeasurementUnit)">
            <summary>
            Called when the measurement unit of the measurements stored in this template
            have changed and all measurements must be converted to the new unit
            </summary>
            <param name="converter">measurement unit converter to use</param>
            <param name="from">from measurement unit</param>
            <param name="to">to measurement unit</param>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplate.MeasurementUnit">
            <summary>
            Gets/sets the measurement unit of the template
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplate.Resolution">
            <summary>
            Gets/sets the resolution used for convertion between device dependant and device independant measurement units
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplate.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="E:Nevron.Diagram.Templates.NTemplate.TemplateChanged">
            <summary>
            Fired when the template has been changed
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplate.Name">
            <summary>
            Gets/set the template node
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplate.Origin">
            <summary>
            Gets/sets the template origin
            </summary>
            <remarks>
            The origin defines the location at which the template will be instanciated in the document
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplate.TransactionDescription">
            <summary>
            Specifies the history transaction description 
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.Create(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Creates the template in the specified document
            </summary>
            <remarks>
            This method will call the CreateTemplate method. 
            The call will be embraced in a transaction with the specified TransactionDescription
            </remarks>
            <param name="document">document in which to create the template</param>
            <returns>true if the template was successfully created, otherwise false</returns> 
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.GetDescription">
            <summary>
            Obtains a dynamic human readable description of the template
            </summary>
            <returns>template description</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.CreateUserControls">
            <summary>
            Creates the template user controls, which are used in the wizard
            </summary>
            <remarks>
            This implementation returns a user control with a nested property grid
            </remarks>
            <returns>array of template user controls</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.CreateTemplate(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Must override to create the template
            </summary>
            <param name="document">document in which to create the template</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.OnTemplateChanged">
            <summary>
            Called when the template has changed
            </summary>
            <remarks>
            This implementation will raise the TemplateChanged event
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.OnMeasurementUnitChanged(Nevron.GraphicsCore.NMeasurementUnit)">
            <summary>
            Called when the measurement unit of this template has changed.
            </summary>
            <param name="newMeasurementUnit"></param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplate.OnResolutionChanged(System.Single)">
            <summary>
            Called when the resolution of this template has changed.
            </summary>
            <param name="newResolution"></param>
        </member>
        <member name="T:Nevron.Diagram.Templates.NTemplateCollection">
            <summary>
            The NTemplateCollection class represents a named strongly typed collection containing NTemplate instances
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.#ctor(System.String)">
            <summary>
            Initializer constructor
            </summary>
            <param name="name">name of the collection</param>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplateCollection.Item(System.Int32)">
            <summary>
            Typed indexer
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.Add(Nevron.Diagram.Templates.NTemplate)">
            <summary>
            Adds a new template to the collection
            </summary>
            <param name="template">template to add</param>
            <returns>index of the new template in the collection</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.IndexOf(Nevron.Diagram.Templates.NTemplate)">
            <summary>
            Obtains the index of the template in the collection
            </summary>
            <param name="template">template</param>
            <returns>template index</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.Insert(System.Int32,Nevron.Diagram.Templates.NTemplate)">
            <summary>
            Inserts the specified template at the specified index
            </summary>
            <param name="index">index at which to insert</param>
            <param name="template">template to insert</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.Remove(Nevron.Diagram.Templates.NTemplate)">
            <summary>
            Removes the specified template from the collection
            </summary>
            <param name="template">template to remove</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.Contains(Nevron.Diagram.Templates.NTemplate)">
            <summary>
            Determines whether the specified template is a member of this collection
            </summary>
            <param name="template">template for which to check</param>
            <returns>true if the template is a member of the collection, otherwise false</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.OnInsert(System.Int32,System.Object)">
            <summary>
            Overriden to check the object type
            </summary>
            <param name="index"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.OnRemove(System.Int32,System.Object)">
            <summary>
            Overriden to check the object type
            </summary>
            <param name="index"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.OnSet(System.Int32,System.Object,System.Object)">
            <summary>
            Overriden to check the object type
            </summary>
            <param name="index"></param>
            <param name="oldobj"></param>
            <param name="newobj"></param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTemplateCollection.OnValidate(System.Object)">
            <summary>
            Overriden to check the object type
            </summary>
            <param name="obj"></param>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTemplateCollection.Name">
            <summary>
            Specifies the collection name
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Templates.NWizard">
            <summary>
            The NWizard class represents a collection of NTemplateCollection instaces (template categories), 
            which provides a visual interface for template selection and modification
            </summary>
            <remarks>
            This class can be instanciated upon demand:
            <code>
            NWizard wizard = new NWizard(document);
            </code>
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NWizard.#ctor(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Initializer constructor
            </summary>
            <param name="document">document in which the selected template will be instanciated (mandatory)</param>
        </member>
        <member name="P:Nevron.Diagram.Templates.NWizard.MeasurementUnit">
            <summary>
            Gets/sets the measurement unit of the wizard
            </summary>
            <remarks>
            By default initialized with the document measurement unit. The set accessor will propagate the call to all contained templates
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NWizard.Resolution">
            <summary>
            Gets/sets the resolution used for convertion between device dependant and device independant measurement units
            </summary>
            <remarks>
            By default initialized with the document resolution. The set accessor will propagate the call to all contained templates
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NWizard.Document">
            <summary>
            Obtains a reference to the document associated with the wizard
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NWizard.Categories">
            <summary>
            Obtains an array of the template categories
            </summary>
            <returns>template categories</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NWizard.ShowDialog">
            <summary>
            Shows the wizard dialog
            </summary>
            <returns>true if the user clicked the OK button and the template was successfully created, otherwise false</returns> 
        </member>
        <member name="M:Nevron.Diagram.Templates.NWizard.AddCategory(Nevron.Diagram.Templates.NTemplateCollection)">
            <summary>
            Adds a new category to the wizard
            </summary>
            <remarks>
            All templates in the category will adopt the wizard resolution and measurement unit
            </remarks>
            <param name="category">template category</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NWizard.RemoveCategory(Nevron.Diagram.Templates.NTemplateCollection)">
            <summary>
            Removes the specified category from the wizard
            </summary>
            <param name="category">template category</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NWizard.GetCategoryAt(System.Int32)">
            <summary>
            Gets the category at the specified index
            </summary>
            <param name="index">index</param>
            <returns>template category</returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NWizard.InitPredefinedTemplateCategories">
            <summary>
            Initializes the wizard with the predefined templates
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Templates.NDTR">
            <summary>
            Namespace class for resources used by the Nevron.Diagram.Templates assembly
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NDTR.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.NDTR.TemplateEllipticalGrid">
            <summary>
            Name for the elliptical grid template
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.NDTR.TemplateRectangularGrid">
            <summary>
            Name for the rectangular grid template
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.NDTR.TemplateTriangularGrid">
            <summary>
            Name for the triangular grid template
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.NDTR.TemplateRandomGraph">
            <summary>
            Name for the triangular grid template
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.NDTR.TemplateFamilyTree">
            <summary>
            Name for the family tree template
            </summary>
        </member>
        <member name="F:Nevron.Diagram.Templates.NDTR.TemplateGenericTree">
            <summary>
            Name for the generic tree template
            </summary>
        </member>
        <member name="T:Nevron.Diagram.Templates.NEllipticalGridTemplate">
            <summary>
            The NEllipticalGridTemplate class represents an elliptical grid template
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NEllipticalGridTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NEllipticalGridTemplate.ConvertMeasurementUnit(Nevron.GraphicsCore.NMeasurementUnitConverter,Nevron.GraphicsCore.NMeasurementUnit,Nevron.GraphicsCore.NMeasurementUnit)">
            <summary>
            Called when the measurement unit of the measurements stored in this node 
            have changed and all measurements must be converted to the new unit
            </summary>
            <remarks>
            Overriden to convert the X and Y radiuses
            </remarks>
            <param name="converter">measurement unit converter to use</param>
            <param name="from">from measurement unit</param>
            <param name="to">to measurement unit</param>
        </member>
        <member name="P:Nevron.Diagram.Templates.NEllipticalGridTemplate.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NEllipticalGridTemplate.RimNodesCount">
            <summary>
            Gets/sets the count of the nodes on the ellipse rim
            </summary>
            <remarks>
            By default set to 6
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NEllipticalGridTemplate.RadiusX">
            <summary>
            Controls the X radius of the ellipse
            </summary>		
        </member>
        <member name="P:Nevron.Diagram.Templates.NEllipticalGridTemplate.RadiusY">
            <summary>
            Controls the Y radius of the ellipse
            </summary>		
        </member>
        <member name="P:Nevron.Diagram.Templates.NEllipticalGridTemplate.HasCenter">
            <summary>
            Specifies whether the grid has a center node
            </summary>
            <remarks>
            By default set to true
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NEllipticalGridTemplate.ConnectGrid">
            <summary>
            Specifies whether the grid vertices are connected
            </summary>
            <remarks>
            By default set to true
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NEllipticalGridTemplate.GetDescription">
            <summary>
            Overriden to return the elliptical grid description
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NEllipticalGridTemplate.CreateTemplate(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Overriden to create the elliptical grid template in the specified document
            </summary>
            <param name="document">document in which to create the template</param>
        </member>
        <member name="T:Nevron.Diagram.Templates.NRandomGraphTemplate">
            <summary>
            Generates a connnected random graph.
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NRandomGraphTemplate.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRandomGraphTemplate.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRandomGraphTemplate.VerticesSize">
            <summary>
            Gets/sets the size of the vertices constructed by this template.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRandomGraphTemplate.EdgeCount">
            <summary>
            The number of edges to generate.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRandomGraphTemplate.VertexCount">
            <summary>
            The number of vertices to generate.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRandomGraphTemplate.MinVerticesSize">
            <summary>
            The minimal size of a vertex in the graph.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRandomGraphTemplate.MaxVerticesSize">
            <summary>
            The maximal size of a vertex in the graph.
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NRandomGraphTemplate.GetDescription">
            <summary>
            Overriden to provide a description of the template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NRandomGraphTemplate.CreateTemplate(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Overriden to create a random graph template in the specified document.
            </summary>
            <param name="document">The document to create a graph in.</param>
        </member>
        <member name="T:Nevron.Diagram.Templates.NRectangularGridTemplate">
            <summary>
            The NEllipticalGridTemplate class represents a rectangular grid template
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NRectangularGridTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRectangularGridTemplate.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRectangularGridTemplate.ColumnCount">
            <summary>
            Gets/sets the columns count
            </summary>
            <remarks>
            By default set to 3
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRectangularGridTemplate.RowCount">
            <summary>
            Gets/sets the rows count
            </summary>
            <remarks>
            By default set to 3
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NRectangularGridTemplate.ConnectGrid">
            <summary>
            Specifies whether the grid vertices are connected
            </summary>
            <remarks>
            By default set to true
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NRectangularGridTemplate.GetDescription">
            <summary>
            Overriden to return the rectangular grid description
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NRectangularGridTemplate.CreateTemplate(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Overriden to create the rectangular grid template in the specified document
            </summary>
            <param name="document">document in which to create the template</param>
        </member>
        <member name="T:Nevron.Diagram.Templates.NTriangularGridTemplate">
            <summary>
            The NTriangularGridTemplate class represents a triangular grid template
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTriangularGridTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTriangularGridTemplate.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTriangularGridTemplate.Levels">
            <summary>
            Gets/sets the levels count of the triangluar grid
            </summary>
            <remarks>
            By default set to 3
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NTriangularGridTemplate.ConnectGrid">
            <summary>
            Specifies whether the grid vertices are connected
            </summary>
            <remarks>
            By default set to true
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTriangularGridTemplate.GetDescription">
            <summary>
            Overriden to return the triangular grid description
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NTriangularGridTemplate.CreateTemplate(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Overriden to create the triangular grid template in the specified document
            </summary>
            <param name="document">document in which to create the template</param>
        </member>
        <member name="T:Nevron.Diagram.Templates.NFamilyTreeTemplate">
            <summary>
            The NFamilyTreeTemplate class represents a family tree template
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NFamilyTreeTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NFamilyTreeTemplate.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NFamilyTreeTemplate.ChildrenCount">
            <summary>
            Gets/sets the children count
            </summary>
            <remarks>
            By default set to 2
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NFamilyTreeTemplate.GetDescription">
            <summary>
            Overriden to return the family tree description
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NFamilyTreeTemplate.CreateTemplate(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Overriden to create the family tree template
            </summary>
            <param name="document">document in which to create the template</param>
        </member>
        <member name="T:Nevron.Diagram.Templates.NGenericTreeTemplate">
            <summary>
            The NGenericTreeTemplate class represents a generic tree template
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGenericTreeTemplate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.BranchNodes">
            <summary>
            Gets/sets the count of the child nodes for each branch
            </summary>
            <remarks>
            By default set to 2
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.Levels">
            <summary>
            Gets/sets the tree levels count
            </summary>
            <remarks>
            By default set to 3 
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.Balanced">
            <summary>
            Gets/sets if the tree is balanced or not
            </summary>
            <remarks>
            By default set to true 
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.LayoutExpand">
            <summary>
            Specifies the tree layout expand
            </summary>
            <remarks>
            By default set to TopToBottom
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.LayoutScheme">
            <summary>
            Specifies the tree layout scheme
            </summary>
            <remarks>
            By default set to NormalCompressed
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.ConnectorType">
            <summary>
            Specifies the edge connector type
            </summary>
            <remarks>
            By default set to DynamicPolyline
            </remarks>
        </member>
        <member name="P:Nevron.Diagram.Templates.NGenericTreeTemplate.VertexSizeDeviation">
            <summary>
            Specifies the deviation of the vertex size according to the VerticesSize (0 for none)
            </summary>
            <remarks>
            By default set to 0
            </remarks>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGenericTreeTemplate.GetDescription">
            <summary>
            Overriden to return the tree description
            </summary>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGenericTreeTemplate.CreateTemplate(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Overriden to create the tree template
            </summary>
            <param name="document">document in which to create the template</param>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGenericTreeTemplate.GetSize(System.Random)">
            <summary>
            Gets the size for a new vertex taking into account the VertexSizeDeviation property.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nevron.Diagram.Templates.NGenericTreeTemplate.CreateTree(Nevron.Diagram.NDrawingDocument)">
            <summary>
            Creates a tree in the specified document
            </summary>
            <param name="document">document in which to create a tree</param>
            <returns>tree elements</returns>
        </member>
        <member name="M:Nevron.Internal.fhfE.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:Nevron.Internal.fhfE.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="M:Nevron.Internal.fhfE.UpdateFromTemplate">
            <summary>
            Overriden to update the property grid from the template
            </summary>
        </member>
        <member name="M:Nevron.Internal.lhfE.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="P:Nevron.Internal.GIfE.LocalizationContextName">
            <summary>
            Gets the localization context name for this class.
            </summary>
        </member>
        <member name="M:Nevron.Internal.GIfE.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="QIfE"></param>
        </member>
    </members>
</doc>
